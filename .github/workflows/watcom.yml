name: Build (OpenWatcom)

on: [push, pull_request]

jobs:
  os2:
    name: ${{ matrix.platform.name }}
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows, makefile: Makefile.w32, cmake_toolchain_file: cmake/toolchains/watcom-windows.cmake }
        - { name: OS/2,    makefile: Makefile.os2, cmake_toolchain_file: cmake/toolchains/watcom-os2.cmake }

    steps:
      - uses: actions/checkout@v2
      - uses: open-watcom/setup-watcom@v0
      - name: Build SDL2
        run: |
          wmake -f ${{ matrix.platform.makefile }}
      - name: Build tests
        run: |
          cd test && wmake -f ${{ matrix.platform.makefile }}
          cd ..
      - name: Run tests
        if: "matrix.platform.makefile == 'Makefile.w32'"
        run: |
          cd test && wmake -f ${{ matrix.platform.makefile }} check-quick
          cd ..
      - name: distclean
        run: |
          wmake -f ${{ matrix.platform.makefile }} distclean
          cd test && wmake -f ${{ matrix.platform.makefile }} distclean
          cd ..
      - name: Configure (CMake)
        run: |
          cmake -S . -B build `
            -DSDL_TESTS=1 `
            -DCMAKE_INSTALL_PREFIX=prefix `
            -DCMAKE_BUILD_TYPE=Release `
            -G "Watcom WMake"
        env:
          CMAKE_TOOLCHAIN_FILE: '${{ github.workspace }}/${{ matrix.platform.cmake_toolchain_file }}'
      - name: Build (CMake)
        run: |
          cmake --build build
      - name: Install (CMake)
        run: |
          echo "SDL2_DIR=$Env:GITHUB_WORKSPACE/prefix" >> $Env:GITHUB_ENV
          cmake --install build
      - name: Verify CMake configuration files
        run: |
          cmake -S cmake/test -B cmake_config_build `
            -DCMAKE_PREFIX_PATH=${{ env.SDL2_DIR }} `
            -DCMAKE_BUILD_TYPE=Release `
            -G "Watcom WMake"
          cmake --build cmake_config_build
        env:
          CMAKE_TOOLCHAIN_FILE: '${{ github.workspace }}/${{ matrix.platform.cmake_toolchain_file }}'
