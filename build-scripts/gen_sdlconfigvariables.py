#!/usr/bin/env python

# Simple DirectMedia Layer
# Copyright (C) 1997-2023 Sam Lantinga <slouken@libsdl.org>
#
# This software is provided 'as-is', without any express or implied
# warranty.  In no event will the authors be held liable for any damages
# arising from the use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely, subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not
#    claim that you wrote the original software. If you use this software
#    in a product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
# 2. Altered source versions must be plainly marked as such, and must not be
#    misrepresented as being the original software.
# 3. This notice may not be removed or altered from any source distribution.

import argparse
import pathlib
import re
import textwrap
import typing


def extract_config_options(root: pathlib.Path) -> typing.List[str]:
    path_build_config_cmake: pathlib.Path = root / "include/build_config/SDL_build_config.h.cmake"
    build_config = path_build_config_cmake.read_text()

    options = []

    for m in re.finditer(r"#cmakedefine(?:01)?(?:\s)+(\S+)", build_config, flags=re.M):
        option = m.group(1)
        options.append(option)

    return options


def write_sdlconfigvariables_cmake(root: pathlib.Path, options: typing.List[str]):

    disable_cmake = root / "cmake/sdlconfigvariables.cmake"
    with disable_cmake.open("w") as f:
        f.write(textwrap.dedent("""\
            # Simple DirectMedia Layer
            # Copyright (C) 1997-2023 Sam Lantinga <slouken@libsdl.org>
            #
            # This software is provided 'as-is', without any express or implied
            # warranty.  In no event will the authors be held liable for any damages
            # arising from the use of this software.
            #
            # Permission is granted to anyone to use this software for any purpose,
            # including commercial applications, and to alter it and redistribute it
            # freely, subject to the following restrictions:
            #
            # 1. The origin of this software must not be misrepresented; you must not
            #    claim that you wrote the original software. If you use this software
            #    in a product, an acknowledgment in the product documentation would be
            #    appreciated but is not required.
            # 2. Altered source versions must be plainly marked as such, and must not be
            #    misrepresented as being the original software.
            # 3. This notice may not be removed or altered from any source distribution.
        """))
        f.write("\n# DO NOT EDIT, THIS FILE WAS GENERATED BY build-scripts/gen-sdlconfigvariables.py\n\n")

        f.write("set(SDL_CONFIG_OPTIONS\n")
        option_txt = "\n  ".join(options)
        f.write(f"  {option_txt}\n")
        f.write(")\n")


def main():
    parser = argparse.ArgumentParser(allow_abbrev=False, description="Regenerate cmake/sdlconfigvariables.cmake")
    parser.add_argument("root", type=pathlib.Path, help="SDL root path")

    args = parser.parse_args()

    options = extract_config_options(root=args.root)

    write_sdlconfigvariables_cmake(root=args.root, options=options)


if __name__ == "__main__":
    raise SystemExit(main())
