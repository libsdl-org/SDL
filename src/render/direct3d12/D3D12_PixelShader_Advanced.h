#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float
; TEXCOORD                 0   xy          1     NONE   float   xy
; COLOR                    0   xyzw        2     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader hash: 81f4ac5bde7e0dc4ae064cb53cb6b6f1
;
; Pipeline Runtime Information:
;
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective
; TEXCOORD                 0                 linear
; COLOR                    0                 linear
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0
;
; Buffer Definitions:
;
; cbuffer Constants
; {
;
;   struct Constants
;   {
;
;       float scRGB_output;                           ; Offset:    0
;       float texture_type;                           ; Offset:    4
;       float input_type;                             ; Offset:    8
;       float color_scale;                            ; Offset:   12
;       float4 texel_size;                            ; Offset:   16
;       float tonemap_method;                         ; Offset:   32
;       float tonemap_factor1;                        ; Offset:   36
;       float tonemap_factor2;                        ; Offset:   40
;       float sdr_white_point;                        ; Offset:   44
;       float4 Yoffset;                               ; Offset:   48
;       float4 Rcoeff;                                ; Offset:   64
;       float4 Gcoeff;                                ; Offset:   80
;       float4 Bcoeff;                                ; Offset:   96
;
;   } Constants;                                      ; Offset:    0 Size:   112
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; Constants                         cbuffer      NA          NA     CB0            cb1     1
; sampler0                          sampler      NA          NA      S0             s0     1
; sampler1                          sampler      NA          NA      S1             s1     1
; texture0                          texture     f32          2d      T0             t0     1
; texture1                          texture     f32          2d      T1             t1     1
; texture2                          texture     f32          2d      T2             t2     1
;
;
; ViewId state:
;
; Number of inputs: 12, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 5, 8 }
;   output 1 depends on inputs: { 4, 5, 9 }
;   output 2 depends on inputs: { 4, 5, 10 }
;   output 3 depends on inputs: { 4, 5, 11 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%Constants = type { float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, <4 x float>, <4 x float>, <4 x float> }
%struct.SamplerState = type { i32 }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 2, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %14 = extractvalue %dx.types.CBufRet.f32 %13, 1
  %15 = fcmp fast oeq float %14, 0.000000e+00
  br i1 %15, label %188, label %16

; <label>:16                                      ; preds = %0
  %17 = fcmp fast oeq float %14, 1.000000e+00
  br i1 %17, label %18, label %24

; <label>:18                                      ; preds = %16
  %19 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %3, %dx.types.Handle %5, float %11, float %12, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %20 = extractvalue %dx.types.ResRet.f32 %19, 0
  %21 = extractvalue %dx.types.ResRet.f32 %19, 1
  %22 = extractvalue %dx.types.ResRet.f32 %19, 2
  %23 = extractvalue %dx.types.ResRet.f32 %19, 3
  br label %188

; <label>:24                                      ; preds = %16
  %25 = fcmp fast oeq float %14, 2.000000e+00
  br i1 %25, label %26, label %85

; <label>:26                                      ; preds = %24
  %27 = call float @dx.op.unary.f32(i32 83, float %11)  ; DerivCoarseX(value)
  %28 = call float @dx.op.unary.f32(i32 83, float %12)  ; DerivCoarseX(value)
  %29 = call float @dx.op.unary.f32(i32 6, float %27)  ; FAbs(value)
  %30 = call float @dx.op.unary.f32(i32 6, float %28)  ; FAbs(value)
  %31 = call float @dx.op.unary.f32(i32 84, float %11)  ; DerivCoarseY(value)
  %32 = call float @dx.op.unary.f32(i32 84, float %12)  ; DerivCoarseY(value)
  %33 = call float @dx.op.unary.f32(i32 6, float %31)  ; FAbs(value)
  %34 = call float @dx.op.unary.f32(i32 6, float %32)  ; FAbs(value)
  %35 = fadd fast float %33, %29
  %36 = fadd fast float %34, %30
  %37 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %38 = extractvalue %dx.types.CBufRet.f32 %37, 2
  %39 = extractvalue %dx.types.CBufRet.f32 %37, 3
  %40 = fmul fast float %38, %35
  %41 = fmul fast float %39, %36
  %42 = call float @dx.op.binary.f32(i32 35, float %40, float 0x3EE4F8B580000000)  ; FMax(a,b)
  %43 = call float @dx.op.binary.f32(i32 35, float %41, float 0x3EE4F8B580000000)  ; FMax(a,b)
  %44 = call float @dx.op.binary.f32(i32 36, float %42, float 1.000000e+00)  ; FMin(a,b)
  %45 = call float @dx.op.binary.f32(i32 36, float %43, float 1.000000e+00)  ; FMin(a,b)
  %46 = fmul fast float %38, %11
  %47 = fmul fast float %39, %12
  %48 = fmul fast float %44, 5.000000e-01
  %49 = fmul fast float %45, 5.000000e-01
  %50 = fsub fast float %46, %48
  %51 = fsub fast float %47, %49
  %52 = call float @dx.op.unary.f32(i32 22, float %50)  ; Frc(value)
  %53 = call float @dx.op.unary.f32(i32 22, float %51)  ; Frc(value)
  %54 = fadd fast float %44, -1.000000e+00
  %55 = fadd fast float %54, %52
  %56 = fadd fast float %45, -1.000000e+00
  %57 = fadd fast float %56, %53
  %58 = fdiv fast float %55, %44
  %59 = fdiv fast float %57, %45
  %60 = call float @dx.op.unary.f32(i32 7, float %58)  ; Saturate(value)
  %61 = call float @dx.op.unary.f32(i32 7, float %59)  ; Saturate(value)
  %62 = fmul fast float %60, 2.000000e+00
  %63 = fmul fast float %61, 2.000000e+00
  %64 = fsub fast float 3.000000e+00, %62
  %65 = fsub fast float 3.000000e+00, %63
  %66 = fmul fast float %60, %60
  %67 = fmul fast float %66, %64
  %68 = fmul fast float %61, %61
  %69 = fmul fast float %68, %65
  %70 = call float @dx.op.unary.f32(i32 27, float %50)  ; Round_ni(value)
  %71 = call float @dx.op.unary.f32(i32 27, float %51)  ; Round_ni(value)
  %72 = fadd fast float %70, 5.000000e-01
  %73 = fadd fast float %71, 5.000000e-01
  %74 = fadd fast float %72, %67
  %75 = fadd fast float %73, %69
  %76 = extractvalue %dx.types.CBufRet.f32 %37, 0
  %77 = extractvalue %dx.types.CBufRet.f32 %37, 1
  %78 = fmul fast float %76, %74
  %79 = fmul fast float %75, %77
  %80 = call %dx.types.ResRet.f32 @dx.op.sampleGrad.f32(i32 63, %dx.types.Handle %3, %dx.types.Handle %5, float %78, float %79, float undef, float undef, i32 0, i32 0, i32 undef, float %27, float %28, float undef, float %31, float %32, float undef, float undef)  ; SampleGrad(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,ddx0,ddx1,ddx2,ddy0,ddy1,ddy2,clamp)
  %81 = extractvalue %dx.types.ResRet.f32 %80, 0
  %82 = extractvalue %dx.types.ResRet.f32 %80, 1
  %83 = extractvalue %dx.types.ResRet.f32 %80, 2
  %84 = extractvalue %dx.types.ResRet.f32 %80, 3
  br label %188

; <label>:85                                      ; preds = %24
  %86 = fcmp fast oeq float %14, 3.000000e+00
  br i1 %86, label %87, label %97

; <label>:87                                      ; preds = %85
  %88 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %3, %dx.types.Handle %5, float %11, float %12, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %89 = extractvalue %dx.types.ResRet.f32 %88, 0
  %90 = fmul fast float %89, 0x3FEFE00000000000
  %91 = fadd fast float %90, 1.953125e-03
  %92 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %2, %dx.types.Handle %4, float %91, float 5.000000e-01, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %93 = extractvalue %dx.types.ResRet.f32 %92, 0
  %94 = extractvalue %dx.types.ResRet.f32 %92, 1
  %95 = extractvalue %dx.types.ResRet.f32 %92, 2
  %96 = extractvalue %dx.types.ResRet.f32 %92, 3
  br label %188

; <label>:97                                      ; preds = %85
  %98 = fcmp fast oeq float %14, 4.000000e+00
  br i1 %98, label %99, label %127

; <label>:99                                      ; preds = %97
  %100 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %3, %dx.types.Handle %5, float %11, float %12, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %101 = extractvalue %dx.types.ResRet.f32 %100, 0
  %102 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %2, %dx.types.Handle %5, float %11, float %12, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %103 = extractvalue %dx.types.ResRet.f32 %102, 0
  %104 = extractvalue %dx.types.ResRet.f32 %102, 1
  %105 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %106 = extractvalue %dx.types.CBufRet.f32 %105, 0
  %107 = extractvalue %dx.types.CBufRet.f32 %105, 1
  %108 = extractvalue %dx.types.CBufRet.f32 %105, 2
  %109 = fadd fast float %106, %101
  %110 = fadd fast float %107, %103
  %111 = fadd fast float %108, %104
  %112 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %113 = extractvalue %dx.types.CBufRet.f32 %112, 0
  %114 = extractvalue %dx.types.CBufRet.f32 %112, 1
  %115 = extractvalue %dx.types.CBufRet.f32 %112, 2
  %116 = call float @dx.op.dot3.f32(i32 55, float %109, float %110, float %111, float %113, float %114, float %115)  ; Dot3(ax,ay,az,bx,by,bz)
  %117 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %118 = extractvalue %dx.types.CBufRet.f32 %117, 0
  %119 = extractvalue %dx.types.CBufRet.f32 %117, 1
  %120 = extractvalue %dx.types.CBufRet.f32 %117, 2
  %121 = call float @dx.op.dot3.f32(i32 55, float %109, float %110, float %111, float %118, float %119, float %120)  ; Dot3(ax,ay,az,bx,by,bz)
  %122 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %123 = extractvalue %dx.types.CBufRet.f32 %122, 0
  %124 = extractvalue %dx.types.CBufRet.f32 %122, 1
  %125 = extractvalue %dx.types.CBufRet.f32 %122, 2
  %126 = call float @dx.op.dot3.f32(i32 55, float %109, float %110, float %111, float %123, float %124, float %125)  ; Dot3(ax,ay,az,bx,by,bz)
  br label %188

; <label>:127                                     ; preds = %97
  %128 = fcmp fast oeq float %14, 5.000000e+00
  br i1 %128, label %129, label %157

; <label>:129                                     ; preds = %127
  %130 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %3, %dx.types.Handle %5, float %11, float %12, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %131 = extractvalue %dx.types.ResRet.f32 %130, 0
  %132 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %2, %dx.types.Handle %5, float %11, float %12, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %133 = extractvalue %dx.types.ResRet.f32 %132, 0
  %134 = extractvalue %dx.types.ResRet.f32 %132, 1
  %135 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %136 = extractvalue %dx.types.CBufRet.f32 %135, 0
  %137 = extractvalue %dx.types.CBufRet.f32 %135, 1
  %138 = extractvalue %dx.types.CBufRet.f32 %135, 2
  %139 = fadd fast float %136, %131
  %140 = fadd fast float %137, %134
  %141 = fadd fast float %138, %133
  %142 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %143 = extractvalue %dx.types.CBufRet.f32 %142, 0
  %144 = extractvalue %dx.types.CBufRet.f32 %142, 1
  %145 = extractvalue %dx.types.CBufRet.f32 %142, 2
  %146 = call float @dx.op.dot3.f32(i32 55, float %139, float %140, float %141, float %143, float %144, float %145)  ; Dot3(ax,ay,az,bx,by,bz)
  %147 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %148 = extractvalue %dx.types.CBufRet.f32 %147, 0
  %149 = extractvalue %dx.types.CBufRet.f32 %147, 1
  %150 = extractvalue %dx.types.CBufRet.f32 %147, 2
  %151 = call float @dx.op.dot3.f32(i32 55, float %139, float %140, float %141, float %148, float %149, float %150)  ; Dot3(ax,ay,az,bx,by,bz)
  %152 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %153 = extractvalue %dx.types.CBufRet.f32 %152, 0
  %154 = extractvalue %dx.types.CBufRet.f32 %152, 1
  %155 = extractvalue %dx.types.CBufRet.f32 %152, 2
  %156 = call float @dx.op.dot3.f32(i32 55, float %139, float %140, float %141, float %153, float %154, float %155)  ; Dot3(ax,ay,az,bx,by,bz)
  br label %188

; <label>:157                                     ; preds = %127
  %158 = fcmp fast oeq float %14, 6.000000e+00
  br i1 %158, label %159, label %188

; <label>:159                                     ; preds = %157
  %160 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %3, %dx.types.Handle %5, float %11, float %12, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %161 = extractvalue %dx.types.ResRet.f32 %160, 0
  %162 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %2, %dx.types.Handle %5, float %11, float %12, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %163 = extractvalue %dx.types.ResRet.f32 %162, 0
  %164 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %1, %dx.types.Handle %5, float %11, float %12, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %165 = extractvalue %dx.types.ResRet.f32 %164, 0
  %166 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %167 = extractvalue %dx.types.CBufRet.f32 %166, 0
  %168 = extractvalue %dx.types.CBufRet.f32 %166, 1
  %169 = extractvalue %dx.types.CBufRet.f32 %166, 2
  %170 = fadd fast float %167, %161
  %171 = fadd fast float %168, %163
  %172 = fadd fast float %169, %165
  %173 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %174 = extractvalue %dx.types.CBufRet.f32 %173, 0
  %175 = extractvalue %dx.types.CBufRet.f32 %173, 1
  %176 = extractvalue %dx.types.CBufRet.f32 %173, 2
  %177 = call float @dx.op.dot3.f32(i32 55, float %170, float %171, float %172, float %174, float %175, float %176)  ; Dot3(ax,ay,az,bx,by,bz)
  %178 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %179 = extractvalue %dx.types.CBufRet.f32 %178, 0
  %180 = extractvalue %dx.types.CBufRet.f32 %178, 1
  %181 = extractvalue %dx.types.CBufRet.f32 %178, 2
  %182 = call float @dx.op.dot3.f32(i32 55, float %170, float %171, float %172, float %179, float %180, float %181)  ; Dot3(ax,ay,az,bx,by,bz)
  %183 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %184 = extractvalue %dx.types.CBufRet.f32 %183, 0
  %185 = extractvalue %dx.types.CBufRet.f32 %183, 1
  %186 = extractvalue %dx.types.CBufRet.f32 %183, 2
  %187 = call float @dx.op.dot3.f32(i32 55, float %170, float %171, float %172, float %184, float %185, float %186)  ; Dot3(ax,ay,az,bx,by,bz)
  br label %188

; <label>:188                                     ; preds = %159, %157, %129, %99, %87, %26, %18, %0
  %189 = phi float [ %20, %18 ], [ %81, %26 ], [ %93, %87 ], [ %116, %99 ], [ %146, %129 ], [ %177, %159 ], [ 1.000000e+00, %0 ], [ 1.000000e+00, %157 ]
  %190 = phi float [ %21, %18 ], [ %82, %26 ], [ %94, %87 ], [ %121, %99 ], [ %151, %129 ], [ %182, %159 ], [ 1.000000e+00, %0 ], [ 0.000000e+00, %157 ]
  %191 = phi float [ %22, %18 ], [ %83, %26 ], [ %95, %87 ], [ %126, %99 ], [ %156, %129 ], [ %187, %159 ], [ 1.000000e+00, %0 ], [ 0.000000e+00, %157 ]
  %192 = phi float [ %23, %18 ], [ %84, %26 ], [ %96, %87 ], [ 1.000000e+00, %99 ], [ 1.000000e+00, %129 ], [ 1.000000e+00, %159 ], [ 1.000000e+00, %0 ], [ 1.000000e+00, %157 ]
  %193 = extractvalue %dx.types.CBufRet.f32 %13, 2
  %194 = fcmp fast oeq float %193, 3.000000e+00
  br i1 %194, label %195, label %243

; <label>:195                                     ; preds = %188
  %196 = call float @dx.op.unary.f32(i32 6, float %189)  ; FAbs(value)
  %197 = call float @dx.op.unary.f32(i32 6, float %190)  ; FAbs(value)
  %198 = call float @dx.op.unary.f32(i32 6, float %191)  ; FAbs(value)
  %199 = call float @dx.op.unary.f32(i32 23, float %196)  ; Log(value)
  %200 = call float @dx.op.unary.f32(i32 23, float %197)  ; Log(value)
  %201 = call float @dx.op.unary.f32(i32 23, float %198)  ; Log(value)
  %202 = fmul fast float %199, 0x3F89F9B580000000
  %203 = fmul fast float %200, 0x3F89F9B580000000
  %204 = fmul fast float %201, 0x3F89F9B580000000
  %205 = call float @dx.op.unary.f32(i32 21, float %202)  ; Exp(value)
  %206 = call float @dx.op.unary.f32(i32 21, float %203)  ; Exp(value)
  %207 = call float @dx.op.unary.f32(i32 21, float %204)  ; Exp(value)
  %208 = fadd fast float %205, -8.359375e-01
  %209 = fadd fast float %206, -8.359375e-01
  %210 = fadd fast float %207, -8.359375e-01
  %211 = call float @dx.op.binary.f32(i32 35, float %208, float 0.000000e+00)  ; FMax(a,b)
  %212 = call float @dx.op.binary.f32(i32 35, float %209, float 0.000000e+00)  ; FMax(a,b)
  %213 = call float @dx.op.binary.f32(i32 35, float %210, float 0.000000e+00)  ; FMax(a,b)
  %214 = fmul fast float %205, 1.868750e+01
  %215 = fmul fast float %206, 1.868750e+01
  %216 = fmul fast float %207, 1.868750e+01
  %217 = fsub fast float 0x4032DA0000000000, %214
  %218 = fsub fast float 0x4032DA0000000000, %215
  %219 = fsub fast float 0x4032DA0000000000, %216
  %220 = fdiv fast float %211, %217
  %221 = fdiv fast float %212, %218
  %222 = fdiv fast float %213, %219
  %223 = call float @dx.op.unary.f32(i32 6, float %220)  ; FAbs(value)
  %224 = call float @dx.op.unary.f32(i32 6, float %221)  ; FAbs(value)
  %225 = call float @dx.op.unary.f32(i32 6, float %222)  ; FAbs(value)
  %226 = call float @dx.op.unary.f32(i32 23, float %223)  ; Log(value)
  %227 = call float @dx.op.unary.f32(i32 23, float %224)  ; Log(value)
  %228 = call float @dx.op.unary.f32(i32 23, float %225)  ; Log(value)
  %229 = fmul fast float %226, 0x40191C0D60000000
  %230 = fmul fast float %227, 0x40191C0D60000000
  %231 = fmul fast float %228, 0x40191C0D60000000
  %232 = call float @dx.op.unary.f32(i32 21, float %229)  ; Exp(value)
  %233 = call float @dx.op.unary.f32(i32 21, float %230)  ; Exp(value)
  %234 = call float @dx.op.unary.f32(i32 21, float %231)  ; Exp(value)
  %235 = fmul fast float %232, 1.000000e+04
  %236 = fmul fast float %233, 1.000000e+04
  %237 = fmul fast float %234, 1.000000e+04
  %238 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %239 = extractvalue %dx.types.CBufRet.f32 %238, 3
  %240 = fdiv fast float %235, %239
  %241 = fdiv fast float %236, %239
  %242 = fdiv fast float %237, %239
  br label %243

; <label>:243                                     ; preds = %195, %188
  %244 = phi float [ %240, %195 ], [ %189, %188 ]
  %245 = phi float [ %241, %195 ], [ %190, %188 ]
  %246 = phi float [ %242, %195 ], [ %191, %188 ]
  %247 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %248 = extractvalue %dx.types.CBufRet.f32 %247, 0
  %249 = fcmp fast une float %248, 0.000000e+00
  br i1 %249, label %250, label %303

; <label>:250                                     ; preds = %243
  %251 = fcmp fast oeq float %248, 1.000000e+00
  br i1 %251, label %252, label %257

; <label>:252                                     ; preds = %250
  %253 = extractvalue %dx.types.CBufRet.f32 %247, 1
  %254 = fmul fast float %253, %244
  %255 = fmul fast float %253, %245
  %256 = fmul fast float %253, %246
  br label %303

; <label>:257                                     ; preds = %250
  %258 = fcmp fast oeq float %248, 2.000000e+00
  br i1 %258, label %259, label %303

; <label>:259                                     ; preds = %257
  %260 = fcmp fast oeq float %193, 2.000000e+00
  br i1 %260, label %261, label %271

; <label>:261                                     ; preds = %259
  %262 = fmul fast float %244, 0x3FE413B180000000
  %263 = call float @dx.op.tertiary.f32(i32 46, float 0x3FD512F900000000, float %245, float %262)  ; FMad(a,b,c)
  %264 = call float @dx.op.tertiary.f32(i32 46, float 0x3FA62D1F20000000, float %246, float %263)  ; FMad(a,b,c)
  %265 = fmul fast float %244, 0x3FB1B05740000000
  %266 = call float @dx.op.tertiary.f32(i32 46, float 0x3FED6CE140000000, float %245, float %265)  ; FMad(a,b,c)
  %267 = call float @dx.op.tertiary.f32(i32 46, float 0x3F8744F5E0000000, float %246, float %266)  ; FMad(a,b,c)
  %268 = fmul fast float %244, 0x3F90C8CD60000000
  %269 = call float @dx.op.tertiary.f32(i32 46, float 0x3FB6880520000000, float %245, float %268)  ; FMad(a,b,c)
  %270 = call float @dx.op.tertiary.f32(i32 46, float 0x3FECA8B6E0000000, float %246, float %269)  ; FMad(a,b,c)
  br label %271

; <label>:271                                     ; preds = %261, %259
  %272 = phi float [ %264, %261 ], [ %244, %259 ]
  %273 = phi float [ %267, %261 ], [ %245, %259 ]
  %274 = phi float [ %270, %261 ], [ %246, %259 ]
  %275 = call float @dx.op.binary.f32(i32 35, float %273, float %274)  ; FMax(a,b)
  %276 = call float @dx.op.binary.f32(i32 35, float %272, float %275)  ; FMax(a,b)
  %277 = fcmp fast ogt float %276, 0.000000e+00
  br i1 %277, label %278, label %289

; <label>:278                                     ; preds = %271
  %279 = extractvalue %dx.types.CBufRet.f32 %247, 1
  %280 = fmul fast float %279, %276
  %281 = fadd fast float %280, 1.000000e+00
  %282 = extractvalue %dx.types.CBufRet.f32 %247, 2
  %283 = fmul fast float %282, %276
  %284 = fadd fast float %283, 1.000000e+00
  %285 = fdiv fast float %281, %284
  %286 = fmul fast float %285, %272
  %287 = fmul fast float %285, %273
  %288 = fmul fast float %285, %274
  br label %289

; <label>:289                                     ; preds = %278, %271
  %290 = phi float [ %286, %278 ], [ %272, %271 ]
  %291 = phi float [ %287, %278 ], [ %273, %271 ]
  %292 = phi float [ %288, %278 ], [ %274, %271 ]
  br i1 %260, label %293, label %303

; <label>:293                                     ; preds = %289
  %294 = fmul fast float %290, 0x3FFA916440000000
  %295 = call float @dx.op.tertiary.f32(i32 46, float 0xBFE2CE1400000000, float %291, float %294)  ; FMad(a,b,c)
  %296 = call float @dx.op.tertiary.f32(i32 46, float 0xBFB2A5A460000000, float %292, float %295)  ; FMad(a,b,c)
  %297 = fmul fast float %290, 0xBFBFE24FE0000000
  %298 = call float @dx.op.tertiary.f32(i32 46, float 0x3FF2205680000000, float %291, float %297)  ; FMad(a,b,c)
  %299 = call float @dx.op.tertiary.f32(i32 46, float 0xBF8118C1A0000000, float %292, float %298)  ; FMad(a,b,c)
  %300 = fmul fast float %290, 0xBF9296F660000000
  %301 = call float @dx.op.tertiary.f32(i32 46, float 0xBFB9C0B9A0000000, float %291, float %300)  ; FMad(a,b,c)
  %302 = call float @dx.op.tertiary.f32(i32 46, float 0x3FF1E66780000000, float %292, float %301)  ; FMad(a,b,c)
  br label %303

; <label>:303                                     ; preds = %293, %289, %257, %252, %243
  %304 = phi float [ %244, %243 ], [ %254, %252 ], [ %296, %293 ], [ %290, %289 ], [ %244, %257 ]
  %305 = phi float [ %245, %243 ], [ %255, %252 ], [ %299, %293 ], [ %291, %289 ], [ %245, %257 ]
  %306 = phi float [ %246, %243 ], [ %256, %252 ], [ %302, %293 ], [ %292, %289 ], [ %246, %257 ]
  %307 = fcmp fast oeq float %193, 1.000000e+00
  br i1 %307, label %308, label %354

; <label>:308                                     ; preds = %303
  %309 = extractvalue %dx.types.CBufRet.f32 %13, 0
  %310 = fcmp fast une float %309, 0.000000e+00
  br i1 %310, label %311, label %346

; <label>:311                                     ; preds = %308
  %312 = fcmp fast ugt float %304, 0x3FA4B5DCC0000000
  br i1 %312, label %315, label %313

; <label>:313                                     ; preds = %311
  %314 = fmul fast float %304, 0x3FB3D07220000000
  br label %322

; <label>:315                                     ; preds = %311
  %316 = fadd fast float %304, 0x3FAC28F5C0000000
  %317 = call float @dx.op.unary.f32(i32 6, float %316)  ; FAbs(value)
  %318 = fmul fast float %317, 0x3FEE54EDE0000000
  %319 = call float @dx.op.unary.f32(i32 23, float %318)  ; Log(value)
  %320 = fmul fast float %319, 0x4003333340000000
  %321 = call float @dx.op.unary.f32(i32 21, float %320)  ; Exp(value)
  br label %322

; <label>:322                                     ; preds = %315, %313
  %323 = phi float [ %314, %313 ], [ %321, %315 ]
  %324 = fcmp fast ugt float %305, 0x3FA4B5DCC0000000
  br i1 %324, label %327, label %325

; <label>:325                                     ; preds = %322
  %326 = fmul fast float %305, 0x3FB3D07220000000
  br label %334

; <label>:327                                     ; preds = %322
  %328 = fadd fast float %305, 0x3FAC28F5C0000000
  %329 = call float @dx.op.unary.f32(i32 6, float %328)  ; FAbs(value)
  %330 = fmul fast float %329, 0x3FEE54EDE0000000
  %331 = call float @dx.op.unary.f32(i32 23, float %330)  ; Log(value)
  %332 = fmul fast float %331, 0x4003333340000000
  %333 = call float @dx.op.unary.f32(i32 21, float %332)  ; Exp(value)
  br label %334

; <label>:334                                     ; preds = %327, %325
  %335 = phi float [ %326, %325 ], [ %333, %327 ]
  %336 = fcmp fast ugt float %306, 0x3FA4B5DCC0000000
  br i1 %336, label %339, label %337

; <label>:337                                     ; preds = %334
  %338 = fmul fast float %306, 0x3FB3D07220000000
  br label %346

; <label>:339                                     ; preds = %334
  %340 = fadd fast float %306, 0x3FAC28F5C0000000
  %341 = call float @dx.op.unary.f32(i32 6, float %340)  ; FAbs(value)
  %342 = fmul fast float %341, 0x3FEE54EDE0000000
  %343 = call float @dx.op.unary.f32(i32 23, float %342)  ; Log(value)
  %344 = fmul fast float %343, 0x4003333340000000
  %345 = call float @dx.op.unary.f32(i32 21, float %344)  ; Exp(value)
  br label %346

; <label>:346                                     ; preds = %339, %337, %308
  %347 = phi float [ %304, %308 ], [ %323, %339 ], [ %323, %337 ]
  %348 = phi float [ %305, %308 ], [ %335, %339 ], [ %335, %337 ]
  %349 = phi float [ %306, %308 ], [ %345, %339 ], [ %338, %337 ]
  %350 = extractvalue %dx.types.CBufRet.f32 %13, 3
  %351 = fmul fast float %350, %347
  %352 = fmul fast float %350, %348
  %353 = fmul fast float %350, %349
  br label %463

; <label>:354                                     ; preds = %303
  %355 = fcmp fast oeq float %193, 2.000000e+00
  %356 = extractvalue %dx.types.CBufRet.f32 %13, 3
  br i1 %355, label %357, label %403

; <label>:357                                     ; preds = %354
  %358 = fmul fast float %356, %304
  %359 = fmul fast float %356, %305
  %360 = fmul fast float %356, %306
  %361 = extractvalue %dx.types.CBufRet.f32 %13, 0
  %362 = fcmp fast une float %361, 0.000000e+00
  br i1 %362, label %463, label %363

; <label>:363                                     ; preds = %357
  %364 = fcmp fast ugt float %358, 0x3F69A5C380000000
  br i1 %364, label %367, label %365

; <label>:365                                     ; preds = %363
  %366 = fmul fast float %358, 0x4029D70A40000000
  br label %374

; <label>:367                                     ; preds = %363
  %368 = call float @dx.op.unary.f32(i32 6, float %358)  ; FAbs(value)
  %369 = call float @dx.op.unary.f32(i32 23, float %368)  ; Log(value)
  %370 = fmul fast float %369, 0x3FDAAAAAA0000000
  %371 = call float @dx.op.unary.f32(i32 21, float %370)  ; Exp(value)
  %372 = fmul fast float %371, 0x3FF0E147A0000000
  %373 = fadd fast float %372, 0xBFAC28F5C0000000
  br label %374

; <label>:374                                     ; preds = %367, %365
  %375 = phi float [ %366, %365 ], [ %373, %367 ]
  %376 = fcmp fast ugt float %359, 0x3F69A5C380000000
  br i1 %376, label %379, label %377

; <label>:377                                     ; preds = %374
  %378 = fmul fast float %359, 0x4029D70A40000000
  br label %386

; <label>:379                                     ; preds = %374
  %380 = call float @dx.op.unary.f32(i32 6, float %359)  ; FAbs(value)
  %381 = call float @dx.op.unary.f32(i32 23, float %380)  ; Log(value)
  %382 = fmul fast float %381, 0x3FDAAAAAA0000000
  %383 = call float @dx.op.unary.f32(i32 21, float %382)  ; Exp(value)
  %384 = fmul fast float %383, 0x3FF0E147A0000000
  %385 = fadd fast float %384, 0xBFAC28F5C0000000
  br label %386

; <label>:386                                     ; preds = %379, %377
  %387 = phi float [ %378, %377 ], [ %385, %379 ]
  %388 = fcmp fast ugt float %360, 0x3F69A5C380000000
  br i1 %388, label %391, label %389

; <label>:389                                     ; preds = %386
  %390 = fmul fast float %360, 0x4029D70A40000000
  br label %398

; <label>:391                                     ; preds = %386
  %392 = call float @dx.op.unary.f32(i32 6, float %360)  ; FAbs(value)
  %393 = call float @dx.op.unary.f32(i32 23, float %392)  ; Log(value)
  %394 = fmul fast float %393, 0x3FDAAAAAA0000000
  %395 = call float @dx.op.unary.f32(i32 21, float %394)  ; Exp(value)
  %396 = fmul fast float %395, 0x3FF0E147A0000000
  %397 = fadd fast float %396, 0xBFAC28F5C0000000
  br label %398

; <label>:398                                     ; preds = %391, %389
  %399 = phi float [ %390, %389 ], [ %397, %391 ]
  %400 = call float @dx.op.unary.f32(i32 7, float %375)  ; Saturate(value)
  %401 = call float @dx.op.unary.f32(i32 7, float %387)  ; Saturate(value)
  %402 = call float @dx.op.unary.f32(i32 7, float %399)  ; Saturate(value)
  br label %463

; <label>:403                                     ; preds = %354
  br i1 %194, label %404, label %459

; <label>:404                                     ; preds = %403
  %405 = fmul fast float %304, 0x3FFA916440000000
  %406 = call float @dx.op.tertiary.f32(i32 46, float 0xBFE2CE1400000000, float %305, float %405)  ; FMad(a,b,c)
  %407 = call float @dx.op.tertiary.f32(i32 46, float 0xBFB2A5A460000000, float %306, float %406)  ; FMad(a,b,c)
  %408 = fmul fast float %304, 0xBFBFE24FE0000000
  %409 = call float @dx.op.tertiary.f32(i32 46, float 0x3FF2205680000000, float %305, float %408)  ; FMad(a,b,c)
  %410 = call float @dx.op.tertiary.f32(i32 46, float 0xBF8118C1A0000000, float %306, float %409)  ; FMad(a,b,c)
  %411 = fmul fast float %304, 0xBF9296F660000000
  %412 = call float @dx.op.tertiary.f32(i32 46, float 0xBFB9C0B9A0000000, float %305, float %411)  ; FMad(a,b,c)
  %413 = call float @dx.op.tertiary.f32(i32 46, float 0x3FF1E66780000000, float %306, float %412)  ; FMad(a,b,c)
  %414 = fmul fast float %356, %407
  %415 = fmul fast float %356, %410
  %416 = fmul fast float %356, %413
  %417 = extractvalue %dx.types.CBufRet.f32 %13, 0
  %418 = fcmp fast une float %417, 0.000000e+00
  br i1 %418, label %463, label %419

; <label>:419                                     ; preds = %404
  %420 = fcmp fast ugt float %414, 0x3F69A5C380000000
  br i1 %420, label %423, label %421

; <label>:421                                     ; preds = %419
  %422 = fmul fast float %414, 0x4029D70A40000000
  br label %430

; <label>:423                                     ; preds = %419
  %424 = call float @dx.op.unary.f32(i32 6, float %414)  ; FAbs(value)
  %425 = call float @dx.op.unary.f32(i32 23, float %424)  ; Log(value)
  %426 = fmul fast float %425, 0x3FDAAAAAA0000000
  %427 = call float @dx.op.unary.f32(i32 21, float %426)  ; Exp(value)
  %428 = fmul fast float %427, 0x3FF0E147A0000000
  %429 = fadd fast float %428, 0xBFAC28F5C0000000
  br label %430

; <label>:430                                     ; preds = %423, %421
  %431 = phi float [ %422, %421 ], [ %429, %423 ]
  %432 = fcmp fast ugt float %415, 0x3F69A5C380000000
  br i1 %432, label %435, label %433

; <label>:433                                     ; preds = %430
  %434 = fmul fast float %415, 0x4029D70A40000000
  br label %442

; <label>:435                                     ; preds = %430
  %436 = call float @dx.op.unary.f32(i32 6, float %415)  ; FAbs(value)
  %437 = call float @dx.op.unary.f32(i32 23, float %436)  ; Log(value)
  %438 = fmul fast float %437, 0x3FDAAAAAA0000000
  %439 = call float @dx.op.unary.f32(i32 21, float %438)  ; Exp(value)
  %440 = fmul fast float %439, 0x3FF0E147A0000000
  %441 = fadd fast float %440, 0xBFAC28F5C0000000
  br label %442

; <label>:442                                     ; preds = %435, %433
  %443 = phi float [ %434, %433 ], [ %441, %435 ]
  %444 = fcmp fast ugt float %416, 0x3F69A5C380000000
  br i1 %444, label %447, label %445

; <label>:445                                     ; preds = %442
  %446 = fmul fast float %416, 0x4029D70A40000000
  br label %454

; <label>:447                                     ; preds = %442
  %448 = call float @dx.op.unary.f32(i32 6, float %416)  ; FAbs(value)
  %449 = call float @dx.op.unary.f32(i32 23, float %448)  ; Log(value)
  %450 = fmul fast float %449, 0x3FDAAAAAA0000000
  %451 = call float @dx.op.unary.f32(i32 21, float %450)  ; Exp(value)
  %452 = fmul fast float %451, 0x3FF0E147A0000000
  %453 = fadd fast float %452, 0xBFAC28F5C0000000
  br label %454

; <label>:454                                     ; preds = %447, %445
  %455 = phi float [ %446, %445 ], [ %453, %447 ]
  %456 = call float @dx.op.unary.f32(i32 7, float %431)  ; Saturate(value)
  %457 = call float @dx.op.unary.f32(i32 7, float %443)  ; Saturate(value)
  %458 = call float @dx.op.unary.f32(i32 7, float %455)  ; Saturate(value)
  br label %463

; <label>:459                                     ; preds = %403
  %460 = fmul fast float %356, %304
  %461 = fmul fast float %356, %305
  %462 = fmul fast float %356, %306
  br label %463

; <label>:463                                     ; preds = %459, %454, %404, %398, %357, %346
  %464 = phi float [ %351, %346 ], [ %460, %459 ], [ %358, %357 ], [ %400, %398 ], [ %414, %404 ], [ %456, %454 ]
  %465 = phi float [ %352, %346 ], [ %461, %459 ], [ %359, %357 ], [ %401, %398 ], [ %415, %404 ], [ %457, %454 ]
  %466 = phi float [ %353, %346 ], [ %462, %459 ], [ %360, %357 ], [ %402, %398 ], [ %416, %404 ], [ %458, %454 ]
  %467 = fmul fast float %464, %7
  %468 = fmul fast float %465, %8
  %469 = fmul fast float %466, %9
  %470 = fmul fast float %192, %10
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %467)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %468)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %469)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %470)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleGrad.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float, float, float, float, float, float, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!15}
!dx.entryPoints = !{!16}

!0 = !{!"dxcoob 1.7.2308.16 (52da17e29)"}
!1 = !{i32 1, i32 0}
!2 = !{i32 1, i32 7}
!3 = !{!"ps", i32 6, i32 0}
!4 = !{!5, null, !10, !12}
!5 = !{!6, !8, !9}
!6 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !7}
!9 = !{i32 2, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 2, i32 1, i32 2, i32 0, !7}
!10 = !{!11}
!11 = !{i32 0, %Constants* undef, !"", i32 0, i32 1, i32 1, i32 112, null}
!12 = !{!13, !14}
!13 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!14 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!15 = !{[14 x i32] [i32 12, i32 4, i32 0, i32 0, i32 0, i32 0, i32 15, i32 15, i32 0, i32 0, i32 1, i32 2, i32 4, i32 8]}
!16 = !{void ()* @main, !"main", !17, !4, null}
!17 = !{!18, !25, null}
!18 = !{!19, !21, !23}
!19 = !{i32 0, !"SV_Position", i8 9, i8 3, !20, i8 4, i32 1, i8 4, i32 0, i8 0, null}
!20 = !{i32 0}
!21 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !20, i8 2, i32 1, i8 2, i32 1, i8 0, !22}
!22 = !{i32 3, i32 3}
!23 = !{i32 2, !"COLOR", i8 9, i8 0, !20, i8 2, i32 1, i8 4, i32 2, i8 0, !24}
!24 = !{i32 3, i32 15}
!25 = !{!26}
!26 = !{i32 0, !"SV_Target", i8 9, i8 16, !20, i8 0, i32 1, i8 4, i32 0, i8 0, !24}

#endif

const unsigned char g_main[] = {
  0x44, 0x58, 0x42, 0x43, 0xd1, 0xe4, 0x45, 0xae, 0xd5, 0x64, 0x28, 0xe4,
  0x27, 0x2d, 0x88, 0x97, 0xeb, 0xb5, 0xdd, 0xd5, 0x01, 0x00, 0x00, 0x00,
  0x1c, 0x24, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00,
  0x7c, 0x02, 0x00, 0x00, 0xa8, 0x03, 0x00, 0x00, 0x88, 0x0d, 0x00, 0x00,
  0xa4, 0x0d, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x84, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c,
  0x4f, 0x52, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65,
  0x74, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x5c, 0x01, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x03,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x24, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x24, 0x01, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0xec, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x53, 0x54, 0x41, 0x54, 0xd8, 0x09, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x76, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xc0, 0x09, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x6d, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xa4, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xe4, 0xa6, 0xe1, 0xf2, 0x27, 0xec,
  0x21, 0x24, 0x7f, 0x25, 0xa4, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x51, 0x31,
  0x0c, 0xc3, 0x40, 0x50, 0x71, 0xcf, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92,
  0x1f, 0x02, 0xcd, 0xb0, 0x10, 0x28, 0x58, 0x0a, 0xa3, 0x10, 0x0c, 0x33,
  0x0c, 0xc3, 0x40, 0x10, 0xc4, 0x40, 0x4d, 0x91, 0x14, 0x82, 0x61, 0x86,
  0x61, 0x18, 0x08, 0x82, 0x18, 0x86, 0x61, 0x18, 0x86, 0x81, 0x9e, 0x32,
  0x0c, 0xc4, 0x40, 0x51, 0x41, 0x06, 0x62, 0x18, 0x86, 0x61, 0x18, 0x68,
  0x2a, 0xc4, 0x40, 0x0c, 0x03, 0x55, 0x47, 0x0d, 0x97, 0x3f, 0x61, 0x0f,
  0x21, 0xf9, 0xdc, 0x46, 0x15, 0x2b, 0x31, 0xf9, 0xc5, 0x6d, 0x23, 0x62,
  0x18, 0x86, 0xa1, 0x10, 0x17, 0xc1, 0x10, 0x84, 0x95, 0x62, 0x20, 0x86,
  0x61, 0x20, 0x6d, 0x8e, 0x20, 0x28, 0x06, 0x43, 0x14, 0x04, 0xc1, 0x51,
  0x37, 0x10, 0x30, 0x8c, 0x40, 0x0c, 0x33, 0xb5, 0xc1, 0x38, 0xb0, 0x43,
  0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94, 0x03, 0x3e, 0xd0, 0x43,
  0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0, 0x81, 0x3d, 0x94, 0xc3,
  0x38, 0xd0, 0xc3, 0x3b, 0xc8, 0x03, 0x1f, 0x98, 0x03, 0x3b, 0xbc, 0x43,
  0x38, 0xd0, 0x03, 0x1b, 0x80, 0x01, 0x1d, 0xf8, 0x01, 0x18, 0xf8, 0x81,
  0x1e, 0xe8, 0x41, 0x3b, 0xa4, 0x03, 0x3c, 0xcc, 0xc3, 0x2f, 0xd0, 0x43,
  0x3e, 0xc0, 0x43, 0x39, 0xa0, 0x80, 0x98, 0x49, 0x0c, 0xc6, 0x81, 0x1d,
  0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x68, 0xa1, 0x1c, 0xf0, 0x81, 0x1e,
  0xea, 0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81, 0x0f, 0xec, 0xa1, 0x1c,
  0xc6, 0x81, 0x1e, 0xde, 0x41, 0x1e, 0xf8, 0xc0, 0x1c, 0xd8, 0xe1, 0x1d,
  0xc2, 0x81, 0x1e, 0xd8, 0x00, 0x0c, 0xe8, 0xc0, 0x0f, 0xc0, 0xc0, 0x0f,
  0x90, 0x00, 0x86, 0x24, 0x5e, 0xc2, 0x39, 0x8d, 0x34, 0x01, 0xcd, 0x24,
  0xa1, 0x66, 0x18, 0x86, 0x01, 0x1c, 0x86, 0x61, 0x00, 0x41, 0x10, 0x24,
  0xf2, 0x26, 0x69, 0x8a, 0x28, 0x61, 0xf2, 0x59, 0x80, 0x79, 0x16, 0x22,
  0x62, 0x27, 0x60, 0x22, 0x50, 0x40, 0x90, 0x99, 0x0e, 0x04, 0x00, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e, 0x00, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x06, 0x10, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x10, 0x20,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x34,
  0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4,
  0x79, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0xc8, 0x13, 0x01, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x90, 0x67, 0x02, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x80, 0x21, 0x4f, 0x05, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x43, 0x1e, 0x0c, 0x08, 0x80, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1a, 0x10, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x3a, 0x20, 0x00, 0x06, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x02, 0x01, 0x00, 0x00, 0x00,
  0x1a, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0,
  0x18, 0x8a, 0xa0, 0x24, 0x0a, 0x3c, 0xa0, 0x0c, 0xca, 0xa1, 0x10, 0x0a,
  0xa2, 0x30, 0x0a, 0xa4, 0x80, 0x0a, 0xa9, 0xa0, 0x0a, 0xab, 0xc0, 0x0a,
  0x30, 0xa0, 0x40, 0x03, 0x0a, 0x38, 0xa0, 0x3c, 0x4a, 0xa7, 0xcc, 0x07,
  0xca, 0xf6, 0xa0, 0x28, 0xa8, 0x28, 0x89, 0x32, 0x28, 0x84, 0x11, 0x80,
  0x22, 0x28, 0x10, 0xe2, 0x6a, 0x80, 0xc6, 0x19, 0x00, 0x22, 0x67, 0x00,
  0xa8, 0x9c, 0x01, 0xa0, 0x73, 0x06, 0x80, 0xd0, 0xb1, 0x1c, 0x86, 0x00,
  0x00, 0x00, 0x78, 0x1e, 0x00, 0x08, 0x04, 0x02, 0x01, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x06, 0x01, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0x44, 0x8f, 0x0c, 0x6f, 0xec, 0xed, 0x4d, 0x0c, 0x24,
  0xc6, 0xe5, 0xc6, 0x45, 0x66, 0x06, 0x06, 0xc7, 0x25, 0xc6, 0x06, 0x04,
  0xa5, 0x46, 0x86, 0x2c, 0x2c, 0xe6, 0xa6, 0x4c, 0x26, 0x27, 0x65, 0x43,
  0x10, 0x4c, 0x10, 0x88, 0x65, 0x82, 0x40, 0x30, 0x1b, 0x84, 0x81, 0xd8,
  0x20, 0x10, 0x04, 0x05, 0xb8, 0xb9, 0x09, 0x02, 0xd1, 0x6c, 0x18, 0x0e,
  0x84, 0x98, 0x20, 0x8c, 0xc1, 0x1a, 0x10, 0xa1, 0x2b, 0xc3, 0xa3, 0xab,
  0x93, 0x2b, 0x83, 0x99, 0x20, 0x10, 0xce, 0x04, 0x81, 0x78, 0x36, 0x08,
  0x44, 0xb3, 0x21, 0x21, 0x94, 0x85, 0x20, 0x06, 0x86, 0x70, 0x88, 0xd0,
  0x95, 0xe1, 0xd1, 0xd5, 0xc9, 0x95, 0xc5, 0x6c, 0x48, 0x06, 0x05, 0x22,
  0x86, 0x81, 0x21, 0x1c, 0x22, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
  0x32, 0x1b, 0x12, 0x46, 0x91, 0x08, 0x66, 0x60, 0x08, 0x67, 0xc3, 0xf0,
  0x44, 0xd3, 0x04, 0xa1, 0x0c, 0xda, 0x80, 0xc9, 0xd0, 0x9b, 0xdb, 0x1c,
  0x5d, 0x98, 0x1b, 0xdd, 0xdc, 0x04, 0x81, 0x80, 0x36, 0x20, 0x44, 0x65,
  0x11, 0xc3, 0x70, 0x01, 0x1b, 0x02, 0x6c, 0x82, 0x70, 0x06, 0x6e, 0x40,
  0x64, 0x2e, 0xac, 0x0d, 0x8e, 0xad, 0x4c, 0x0e, 0x66, 0x03, 0x42, 0x68,
  0x1b, 0x41, 0x0c, 0x04, 0x40, 0x64, 0x2e, 0xac, 0x0d, 0x8e, 0xad, 0x4c,
  0x2e, 0x66, 0x03, 0x32, 0x68, 0x1d, 0x31, 0x0c, 0x04, 0xb0, 0x41, 0xe0,
  0xbc, 0x0d, 0x04, 0x05, 0x64, 0xdf, 0x04, 0x81, 0x0c, 0xd8, 0x80, 0xcc,
  0xdc, 0x98, 0xd4, 0x91, 0xd0, 0xd7, 0x5b, 0x1d, 0x1d, 0x5c, 0x1d, 0xdd,
  0x04, 0x81, 0x88, 0x26, 0x08, 0x84, 0x34, 0x41, 0xe0, 0xd4, 0x60, 0x03,
  0x82, 0x88, 0xc1, 0x18, 0x10, 0x64, 0xd0, 0x34, 0x65, 0x40, 0x86, 0xae,
  0x0c, 0x8f, 0xae, 0x4e, 0xae, 0xec, 0x8b, 0x2e, 0x0f, 0xae, 0x6c, 0x82,
  0x40, 0x4c, 0x1b, 0x10, 0xe4, 0x0c, 0xc6, 0x00, 0x0d, 0xc8, 0xa0, 0x69,
  0xca, 0x80, 0x4a, 0x9a, 0x1b, 0x5c, 0x1d, 0xdd, 0x17, 0x5d, 0x1e, 0x5c,
  0xd9, 0x04, 0x81, 0xa0, 0x36, 0x20, 0x88, 0x1a, 0x8c, 0xc1, 0x1a, 0x90,
  0x41, 0xd3, 0x94, 0x01, 0x97, 0xb1, 0x37, 0xb6, 0x37, 0xb9, 0xaf, 0xb9,
  0xb1, 0x30, 0xb6, 0xb2, 0x09, 0x02, 0x51, 0x6d, 0x40, 0x90, 0x36, 0x18,
  0x03, 0x37, 0x20, 0x83, 0xa6, 0x29, 0x03, 0x2a, 0x74, 0x65, 0x78, 0x65,
  0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x13, 0x04, 0xc2, 0xda, 0x80, 0x20,
  0x70, 0x30, 0x06, 0x71, 0x40, 0x06, 0x4d, 0x53, 0x06, 0x74, 0xe8, 0xde,
  0xdc, 0xca, 0xda, 0xc2, 0xe0, 0xbe, 0xda, 0xca, 0xe8, 0xd0, 0xde, 0xc8,
  0x26, 0x08, 0xc4, 0xb5, 0x01, 0x41, 0xe6, 0x60, 0x0c, 0xe8, 0x80, 0x0c,
  0x9a, 0xa6, 0x0c, 0xf8, 0xd0, 0xbd, 0xb9, 0x95, 0xb5, 0x85, 0xc1, 0x7d,
  0x99, 0x85, 0x8d, 0xd1, 0xbd, 0xc9, 0xc5, 0x4c, 0x10, 0x08, 0x6c, 0x03,
  0x82, 0xd8, 0xc1, 0x18, 0xdc, 0x01, 0x19, 0x34, 0x4d, 0x19, 0xf0, 0xa1,
  0x7b, 0x73, 0x2b, 0x6b, 0x0b, 0x83, 0xfb, 0x32, 0x0b, 0x1b, 0xa3, 0x7b,
  0x93, 0x93, 0x99, 0x20, 0x10, 0xd9, 0x06, 0x04, 0xc9, 0x83, 0x31, 0xd0,
  0x03, 0x32, 0x68, 0x9a, 0x32, 0xe0, 0x33, 0x47, 0x26, 0xf7, 0x75, 0x87,
  0x96, 0x46, 0x57, 0xf6, 0x05, 0xf7, 0x96, 0xe6, 0x46, 0x37, 0x41, 0x20,
  0xb4, 0x0d, 0x08, 0xc2, 0x07, 0x63, 0xd0, 0x07, 0x64, 0xd0, 0x34, 0x65,
  0xc0, 0x23, 0xeb, 0xcd, 0xcc, 0x6c, 0xae, 0x8c, 0x6e, 0x82, 0x40, 0x6c,
  0x1b, 0x10, 0xe4, 0x0f, 0xc6, 0x00, 0x14, 0xc8, 0xa0, 0x69, 0xca, 0x80,
  0x86, 0xd4, 0xd8, 0x5b, 0x99, 0x99, 0xd9, 0x04, 0x81, 0xe0, 0x36, 0x20,
  0x88, 0x28, 0x8c, 0xc1, 0x28, 0x90, 0x41, 0xd3, 0x94, 0x01, 0x8d, 0xa3,
  0xb1, 0xb7, 0x32, 0x33, 0xb3, 0x09, 0x02, 0xd1, 0x6d, 0x40, 0x90, 0x52,
  0x18, 0x03, 0x53, 0x20, 0x83, 0xa6, 0x29, 0x03, 0x1a, 0x42, 0x63, 0x6f,
  0x65, 0x66, 0x66, 0x13, 0x04, 0xc2, 0xdb, 0x80, 0x20, 0xa8, 0x30, 0x06,
  0xa9, 0x40, 0x06, 0x4d, 0x53, 0x06, 0x1b, 0x9c, 0xcb, 0x0c, 0xd2, 0x80,
  0x0d, 0xde, 0x40, 0x0e, 0xea, 0x00, 0x0f, 0xf6, 0xc0, 0x0f, 0x42, 0x81,
  0x14, 0x4e, 0x41, 0x15, 0x36, 0x0c, 0x44, 0x18, 0xac, 0xc2, 0x04, 0x41,
  0x00, 0x36, 0x00, 0x1b, 0x06, 0xc2, 0x15, 0x5c, 0x61, 0x43, 0xf0, 0x0a,
  0x1b, 0x86, 0xa1, 0x15, 0x60, 0x61, 0x82, 0x80, 0x06, 0x6f, 0xb0, 0x21,
  0x90, 0x05, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0xa6, 0xac, 0xbe, 0xa0,
  0xde, 0xe6, 0xd2, 0xe8, 0xd2, 0xde, 0xdc, 0x26, 0x08, 0x05, 0x19, 0x4c,
  0x10, 0x8a, 0x32, 0xd8, 0x10, 0x10, 0x13, 0x84, 0xc2, 0x0c, 0x26, 0x08,
  0xc5, 0x19, 0x6c, 0x58, 0x88, 0x5a, 0xb0, 0x85, 0x5b, 0xc0, 0x85, 0x5c,
  0x18, 0x72, 0x81, 0xd0, 0x05, 0x80, 0x08, 0x55, 0x11, 0xd6, 0xd0, 0xd3,
  0x93, 0x14, 0xd1, 0x04, 0xa1, 0x40, 0x83, 0x0d, 0xc2, 0x18, 0x8c, 0xc1,
  0x86, 0x65, 0xe0, 0x05, 0x5b, 0xd0, 0x05, 0x5c, 0xe8, 0x85, 0xa1, 0x17,
  0x06, 0x5d, 0xf0, 0x05, 0x16, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x13, 0x04,
  0xe2, 0xdb, 0x20, 0x8c, 0x41, 0x38, 0x6c, 0x58, 0x18, 0x70, 0xb0, 0x05,
  0x5d, 0xc0, 0x85, 0x5e, 0x18, 0x72, 0x81, 0xd1, 0x05, 0x71, 0xd8, 0x30,
  0xec, 0xc2, 0x2f, 0x8c, 0x03, 0x93, 0x29, 0xab, 0x2f, 0xaa, 0x30, 0xb9,
  0xb3, 0x32, 0xba, 0x09, 0x42, 0x91, 0x06, 0x1b, 0x16, 0xa2, 0x1c, 0x6c,
  0xc1, 0x1c, 0x70, 0x41, 0x17, 0x86, 0x5c, 0x20, 0x74, 0x41, 0x1c, 0x36,
  0x04, 0xe7, 0xb0, 0x61, 0x20, 0x07, 0x74, 0x00, 0x36, 0x14, 0xad, 0x40,
  0x0b, 0xe9, 0x00, 0x06, 0x00, 0x11, 0x31, 0xb9, 0x30, 0xb7, 0x31, 0xb4,
  0xb2, 0xb9, 0x09, 0x02, 0x01, 0x06, 0x34, 0xcc, 0xd8, 0xde, 0xc2, 0xe8,
  0xe6, 0x26, 0x08, 0x44, 0x18, 0xb0, 0x48, 0x73, 0x9b, 0xa3, 0x9b, 0x9b,
  0x20, 0x10, 0x62, 0x40, 0x63, 0x2e, 0xed, 0xec, 0x8b, 0x8d, 0x8c, 0xc6,
  0x5c, 0xda, 0xd9, 0xd7, 0x1c, 0x1d, 0x11, 0xba, 0x32, 0xbc, 0xaf, 0x33,
  0xb9, 0x30, 0x32, 0x22, 0x74, 0x65, 0x78, 0x5f, 0x6e, 0x6f, 0x72, 0x6d,
  0x13, 0x04, 0x62, 0x0c, 0x36, 0x38, 0xeb, 0xc0, 0x0e, 0xed, 0xe0, 0x0e,
  0xef, 0x00, 0x0f, 0xf1, 0x80, 0xc8, 0x03, 0x1a, 0xcc, 0xc3, 0x40, 0x0f,
  0xf5, 0x50, 0x85, 0x8d, 0xcd, 0xae, 0xcd, 0x25, 0x8d, 0xac, 0xcc, 0x8d,
  0x6e, 0x4a, 0x10, 0x54, 0x21, 0xc3, 0x73, 0xb1, 0x2b, 0x93, 0x9b, 0x4b,
  0x7b, 0x73, 0x9b, 0x12, 0x10, 0x4d, 0xc8, 0xf0, 0x5c, 0xec, 0xc2, 0xd8,
  0xec, 0xca, 0xe4, 0xa6, 0x04, 0x45, 0x1d, 0x32, 0x3c, 0x97, 0x39, 0xb4,
  0x30, 0xb2, 0x32, 0xb9, 0xa6, 0x37, 0xb2, 0x32, 0xb6, 0x29, 0x01, 0x52,
  0x86, 0x0c, 0xcf, 0x45, 0xae, 0x6c, 0xee, 0xad, 0x4e, 0x6e, 0xac, 0x6c,
  0x6e, 0x4a, 0xf0, 0x55, 0x22, 0xc3, 0x73, 0xa1, 0xcb, 0x83, 0x2b, 0x0b,
  0x72, 0x73, 0x7b, 0xa3, 0x0b, 0xa3, 0x4b, 0x7b, 0x73, 0x9b, 0x9b, 0x22,
  0xac, 0x02, 0x2c, 0xd4, 0x21, 0xc3, 0x73, 0xb1, 0x4b, 0x2b, 0xbb, 0x4b,
  0x22, 0x9b, 0xa2, 0x0b, 0xa3, 0x2b, 0x9b, 0x12, 0xc8, 0x42, 0x1d, 0x32,
  0x3c, 0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c, 0xa8, 0xb7, 0x34, 0x37, 0xba,
  0xb9, 0x29, 0x41, 0x3a, 0x74, 0x21, 0xc3, 0x73, 0x19, 0x7b, 0xab, 0x73,
  0xa3, 0x2b, 0x93, 0x9b, 0x9b, 0x12, 0xd4, 0x03, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d,
  0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x2a, 0x00, 0x00, 0x00, 0x76, 0x00, 0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x80,
  0x34, 0x40, 0x84, 0xf9, 0xc5, 0x6d, 0x1b, 0xc2, 0x36, 0x5c, 0xbe, 0xf3,
  0xf8, 0x42, 0x40, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01,
  0x08, 0x98, 0x5f, 0xdc, 0xb6, 0x29, 0x48, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f,
  0x44, 0x04, 0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b, 0x61, 0x06, 0xce, 0x70,
  0xf9, 0xce, 0xe3, 0x0f, 0xce, 0x74, 0xfb, 0xc5, 0x6d, 0x5b, 0xc0, 0x34,
  0x5c, 0xbe, 0xf3, 0xf8, 0x8b, 0x03, 0x0c, 0x62, 0xf3, 0x50, 0x93, 0x5f,
  0xdc, 0xb6, 0x0d, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x01, 0xcc, 0xb3,
  0x10, 0x7e, 0x71, 0xdb, 0x46, 0x40, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x04,
  0x30, 0xcf, 0x42, 0x80, 0x11, 0x30, 0xf8, 0xc5, 0x6d, 0x9b, 0x40, 0x35,
  0x5c, 0xbe, 0xf3, 0xf8, 0xd2, 0xe4, 0x44, 0x04, 0x4a, 0x4d, 0x0f, 0x35,
  0xf9, 0xc5, 0x6d, 0x5b, 0x82, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x13, 0x11,
  0x4d, 0x08, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0x56, 0xf0, 0x0c, 0x97, 0xef,
  0x3c, 0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x00, 0x04, 0x03,
  0x20, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0xf4, 0xac, 0x5b,
  0xde, 0x7e, 0x0d, 0xc4, 0xae, 0x06, 0x4c, 0xb5, 0x3c, 0xb6, 0xb6, 0xf1,
  0x44, 0x58, 0x49, 0x4c, 0x70, 0x16, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x9c, 0x05, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x58, 0x16, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x93, 0x05, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xa8, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xe4, 0xa6, 0xe1, 0xf2, 0x27, 0xec,
  0x21, 0x24, 0x7f, 0x25, 0xa4, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x51, 0x31,
  0x0c, 0xc3, 0x40, 0x50, 0x71, 0xcf, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92,
  0x1f, 0x02, 0xcd, 0xb0, 0x10, 0x28, 0x58, 0x0a, 0xa3, 0x10, 0x0c, 0x33,
  0x0c, 0xc3, 0x40, 0x10, 0xc4, 0x40, 0x4d, 0x91, 0x14, 0x82, 0x61, 0x86,
  0x61, 0x18, 0x08, 0x82, 0x18, 0x86, 0x61, 0x18, 0x86, 0x81, 0x9e, 0x32,
  0x0c, 0xc4, 0x40, 0x51, 0x41, 0x06, 0x62, 0x18, 0x86, 0x61, 0x18, 0x68,
  0x2a, 0xc4, 0x40, 0x0c, 0x03, 0x55, 0x47, 0x0d, 0x97, 0x3f, 0x61, 0x0f,
  0x21, 0xf9, 0xdc, 0x46, 0x15, 0x2b, 0x31, 0xf9, 0xc5, 0x6d, 0x23, 0x62,
  0x18, 0x86, 0xa1, 0x10, 0x17, 0xc1, 0x10, 0x84, 0x95, 0x62, 0x20, 0x86,
  0x61, 0x20, 0x6d, 0x8e, 0x20, 0x28, 0x06, 0x43, 0x14, 0x04, 0xc1, 0x51,
  0x37, 0x10, 0x30, 0x8c, 0x40, 0x0c, 0x33, 0xb5, 0xc1, 0x38, 0xb0, 0x43,
  0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94, 0x03, 0x3e, 0xd0, 0x43,
  0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0, 0x81, 0x3d, 0x94, 0xc3,
  0x38, 0xd0, 0xc3, 0x3b, 0xc8, 0x03, 0x1f, 0x98, 0x03, 0x3b, 0xbc, 0x43,
  0x38, 0xd0, 0x03, 0x1b, 0x80, 0x01, 0x1d, 0xf8, 0x01, 0x18, 0xf8, 0x81,
  0x1e, 0xe8, 0x41, 0x3b, 0xa4, 0x03, 0x3c, 0xcc, 0xc3, 0x2f, 0xd0, 0x43,
  0x3e, 0xc0, 0x43, 0x39, 0xa0, 0x80, 0x98, 0x49, 0x0c, 0xc6, 0x81, 0x1d,
  0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x68, 0xa1, 0x1c, 0xf0, 0x81, 0x1e,
  0xea, 0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81, 0x0f, 0xec, 0xa1, 0x1c,
  0xc6, 0x81, 0x1e, 0xde, 0x41, 0x1e, 0xf8, 0xc0, 0x1c, 0xd8, 0xe1, 0x1d,
  0xc2, 0x81, 0x1e, 0xd8, 0x00, 0x0c, 0xe8, 0xc0, 0x0f, 0xc0, 0xc0, 0x0f,
  0x90, 0x00, 0x86, 0x24, 0x5e, 0xc2, 0x39, 0x8d, 0x34, 0x01, 0xcd, 0x24,
  0xa1, 0x66, 0x18, 0x86, 0x01, 0x1c, 0x86, 0x61, 0x00, 0x41, 0x10, 0x24,
  0xf2, 0x26, 0x69, 0x8a, 0x28, 0x61, 0xf2, 0x59, 0x80, 0x79, 0x16, 0x22,
  0x62, 0x27, 0x60, 0x22, 0x50, 0x40, 0x90, 0x99, 0x0e, 0xc4, 0x14, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x10, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0x34, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x79, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0x13, 0x01, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x67, 0x02, 0x02, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x05, 0x04, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x0c, 0x08, 0x80,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1a, 0x10,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x3a,
  0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x02,
  0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22,
  0x4a, 0x60, 0x04, 0xa0, 0x1c, 0x8a, 0xa1, 0x08, 0x4a, 0xa2, 0xc0, 0x03,
  0xca, 0xa0, 0x3c, 0xa8, 0x28, 0x89, 0x32, 0x28, 0x84, 0x11, 0x80, 0x22,
  0x28, 0x10, 0x1a, 0x67, 0x00, 0xa8, 0x9c, 0x01, 0xa0, 0x73, 0x06, 0x80,
  0xd0, 0xb1, 0x1c, 0x86, 0x00, 0x00, 0x00, 0x78, 0x1e, 0x00, 0x08, 0x04,
  0x02, 0x01, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44, 0x8f, 0x0c, 0x6f, 0xec,
  0xed, 0x4d, 0x0c, 0x24, 0xc6, 0xe5, 0xc6, 0x45, 0x66, 0x06, 0x06, 0xc7,
  0x25, 0xc6, 0x06, 0x04, 0xa5, 0x46, 0x86, 0x2c, 0x2c, 0xe6, 0xa6, 0x4c,
  0x26, 0x27, 0x65, 0x43, 0x10, 0x4c, 0x10, 0x88, 0x65, 0x82, 0x40, 0x30,
  0x1b, 0x84, 0x81, 0x98, 0x20, 0x10, 0xcd, 0x06, 0x61, 0x30, 0x28, 0xc0,
  0xcd, 0x4d, 0x10, 0x08, 0x67, 0xc3, 0x80, 0x24, 0xc4, 0x04, 0x61, 0x0c,
  0x34, 0x02, 0x13, 0x04, 0xe2, 0x99, 0x20, 0x10, 0xd0, 0x06, 0x81, 0x70,
  0x36, 0x24, 0xc4, 0xc2, 0x10, 0xc4, 0xd0, 0x10, 0xcf, 0x86, 0x64, 0x58,
  0x18, 0x62, 0x18, 0x1a, 0xe2, 0xd9, 0x90, 0x34, 0x0b, 0x43, 0x34, 0x43,
  0x43, 0x3c, 0x1b, 0x06, 0x28, 0x92, 0x26, 0x08, 0x65, 0xb0, 0x4d, 0x10,
  0x88, 0x68, 0x03, 0x42, 0x50, 0x0c, 0x31, 0x0c, 0x15, 0xb0, 0x21, 0xb0,
  0x26, 0x08, 0x67, 0xc0, 0x6d, 0x40, 0x08, 0x8c, 0x21, 0x88, 0x81, 0x00,
  0x36, 0x20, 0x03, 0xc6, 0x10, 0xc3, 0x40, 0x00, 0x1b, 0x84, 0x4c, 0xdb,
  0x40, 0x4c, 0xc0, 0xb5, 0x4d, 0x10, 0xd0, 0xa0, 0xdb, 0x10, 0x74, 0x13,
  0x04, 0x01, 0x20, 0xd1, 0x16, 0x96, 0xe6, 0xc6, 0x65, 0xca, 0xea, 0x0b,
  0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x6d, 0x82, 0x50, 0x50, 0x13,
  0x84, 0xa2, 0xda, 0x10, 0x10, 0x13, 0x84, 0xc2, 0x9a, 0x20, 0x14, 0xd7,
  0x86, 0x85, 0x08, 0x03, 0x31, 0x18, 0x03, 0x32, 0x28, 0x83, 0xa1, 0x0c,
  0x08, 0x33, 0x00, 0x88, 0x50, 0x15, 0x61, 0x0d, 0x3d, 0x3d, 0x49, 0x11,
  0x4d, 0x10, 0x0a, 0x6c, 0x82, 0x40, 0x48, 0x1b, 0x04, 0x35, 0x50, 0x83,
  0x0d, 0xcb, 0x80, 0x06, 0x62, 0x60, 0x06, 0x64, 0x90, 0x06, 0x43, 0x1a,
  0x0c, 0x66, 0xb0, 0x06, 0x2c, 0x86, 0x9e, 0x98, 0x9e, 0xa4, 0x26, 0x08,
  0xc4, 0xb4, 0x41, 0x50, 0x03, 0x37, 0xd8, 0xb0, 0x34, 0x6d, 0x20, 0x06,
  0x66, 0x40, 0x06, 0x69, 0x30, 0x94, 0x41, 0x63, 0x06, 0x6f, 0xb0, 0x61,
  0x38, 0x03, 0x36, 0x80, 0x03, 0x26, 0x53, 0x56, 0x5f, 0x54, 0x61, 0x72,
  0x67, 0x65, 0x74, 0x13, 0x84, 0x22, 0xdb, 0xb0, 0x10, 0x72, 0x20, 0x06,
  0x73, 0x40, 0x06, 0x66, 0x30, 0x94, 0x01, 0x61, 0x06, 0x6f, 0xb0, 0x21,
  0xa0, 0x83, 0x0d, 0x43, 0x1c, 0xd4, 0x01, 0xb0, 0xa1, 0xf8, 0xc0, 0xc0,
  0x0e, 0x38, 0xa0, 0x0a, 0x1b, 0x9b, 0x5d, 0x9b, 0x4b, 0x1a, 0x59, 0x99,
  0x1b, 0xdd, 0x94, 0x20, 0xa8, 0x42, 0x86, 0xe7, 0x62, 0x57, 0x26, 0x37,
  0x97, 0xf6, 0xe6, 0x36, 0x25, 0x20, 0x9a, 0x90, 0xe1, 0xb9, 0xd8, 0x85,
  0xb1, 0xd9, 0x95, 0xc9, 0x4d, 0x09, 0x8c, 0x3a, 0x64, 0x78, 0x2e, 0x73,
  0x68, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x82,
  0xa4, 0x0c, 0x19, 0x9e, 0x8b, 0x5c, 0xd9, 0xdc, 0x5b, 0x9d, 0xdc, 0x58,
  0xd9, 0xdc, 0x94, 0x60, 0xab, 0x43, 0x86, 0xe7, 0x62, 0x97, 0x56, 0x76,
  0x97, 0x44, 0x36, 0x45, 0x17, 0x46, 0x57, 0x36, 0x25, 0xe8, 0xea, 0x90,
  0xe1, 0xb9, 0x94, 0xb9, 0xd1, 0xc9, 0xe5, 0x41, 0xbd, 0xa5, 0xb9, 0xd1,
  0xcd, 0x4d, 0x09, 0xec, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc,
  0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4,
  0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
  0x76, 0x00, 0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x80, 0x34, 0x40, 0x84, 0xf9,
  0xc5, 0x6d, 0x1b, 0xc2, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15,
  0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x5f, 0xdc,
  0xb6, 0x29, 0x48, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11,
  0x21, 0xd0, 0x0c, 0x0b, 0x61, 0x06, 0xce, 0x70, 0xf9, 0xce, 0xe3, 0x0f,
  0xce, 0x74, 0xfb, 0xc5, 0x6d, 0x5b, 0xc0, 0x34, 0x5c, 0xbe, 0xf3, 0xf8,
  0x8b, 0x03, 0x0c, 0x62, 0xf3, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x0d, 0x40,
  0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x01, 0xcc, 0xb3, 0x10, 0x7e, 0x71, 0xdb,
  0x46, 0x40, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x04, 0x30, 0xcf, 0x42, 0x80,
  0x11, 0x30, 0xf8, 0xc5, 0x6d, 0x9b, 0x40, 0x35, 0x5c, 0xbe, 0xf3, 0xf8,
  0xd2, 0xe4, 0x44, 0x04, 0x4a, 0x4d, 0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0x5b,
  0x82, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x13, 0x11, 0x4d, 0x08, 0x10, 0x61,
  0x7e, 0x71, 0xdb, 0x56, 0xf0, 0x0c, 0x97, 0xef, 0x3c, 0x3e, 0xd5, 0x00,
  0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x00, 0x04, 0x03, 0x20, 0x0d, 0x00, 0x00,
  0x61, 0x20, 0x00, 0x00, 0xc1, 0x03, 0x00, 0x00, 0x13, 0x04, 0x7f, 0x10,
  0x0b, 0x04, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0xc4, 0x8d, 0x00, 0x50,
  0x51, 0x02, 0x44, 0x94, 0x5f, 0xd9, 0x14, 0x4b, 0x21, 0x15, 0x6a, 0x40,
  0x99, 0x06, 0x94, 0x5c, 0x29, 0x94, 0x51, 0xb9, 0x15, 0x42, 0xe1, 0x95,
  0x4a, 0xb9, 0x94, 0xdd, 0x0c, 0x40, 0x71, 0xd1, 0x30, 0x46, 0xe0, 0xf6,
  0xb1, 0x68, 0x7b, 0x63, 0x04, 0xef, 0x9e, 0x96, 0xf7, 0x37, 0x46, 0xa0,
  0xb3, 0xe6, 0x1c, 0x82, 0xc1, 0x18, 0x01, 0xdb, 0xc6, 0xaf, 0xbc, 0x8d,
  0x11, 0x80, 0x20, 0x08, 0xe2, 0xbf, 0x30, 0x46, 0x20, 0xe6, 0x62, 0xda,
  0x7f, 0x63, 0x04, 0x60, 0xc9, 0xb3, 0xf1, 0x2f, 0x8c, 0x11, 0x8c, 0xe9,
  0xaa, 0xe6, 0xbe, 0x30, 0x46, 0xf0, 0xcf, 0xa4, 0xff, 0xfb, 0xc2, 0x18,
  0x01, 0x5d, 0x83, 0x62, 0xfe, 0x8d, 0x11, 0xb4, 0x70, 0x1c, 0x83, 0xbe,
  0x30, 0x46, 0x30, 0xf7, 0x6d, 0x9a, 0xfa, 0xc2, 0x18, 0x41, 0xeb, 0x86,
  0x3c, 0xef, 0x0b, 0x63, 0x04, 0x7c, 0xce, 0xfa, 0xf8, 0x37, 0x46, 0x00,
  0x82, 0xa0, 0x7f, 0x7f, 0x63, 0x04, 0x20, 0x08, 0x82, 0x70, 0x37, 0x46,
  0x00, 0x82, 0x20, 0x88, 0x82, 0xc1, 0x18, 0x01, 0x08, 0x82, 0xa0, 0x0a,
  0x06, 0x63, 0x04, 0x20, 0x08, 0x82, 0x2c, 0x18, 0x8c, 0x11, 0xb0, 0xec,
  0x19, 0xca, 0xdf, 0x18, 0x01, 0xea, 0x97, 0xb1, 0xfa, 0x8d, 0x11, 0xe4,
  0xa7, 0x2e, 0xce, 0xde, 0x18, 0x81, 0x5e, 0x83, 0x3b, 0xee, 0x8d, 0x11,
  0xa8, 0x78, 0x6e, 0xdb, 0xdf, 0x18, 0xc1, 0xdb, 0xa7, 0xf4, 0xe8, 0x8d,
  0x11, 0xac, 0x73, 0xcc, 0xa2, 0xde, 0x18, 0x41, 0x1a, 0xc2, 0xe8, 0xee,
  0x8d, 0x11, 0xdc, 0x6d, 0xac, 0xda, 0xdf, 0x18, 0x41, 0xcc, 0x83, 0x7d,
  0xee, 0x8d, 0x11, 0x98, 0xf7, 0xba, 0xca, 0xde, 0x18, 0x01, 0x08, 0xc2,
  0x78, 0x38, 0x06, 0x63, 0x04, 0xeb, 0x88, 0xc7, 0x2c, 0x18, 0x8c, 0x11,
  0x80, 0x20, 0xdd, 0xe6, 0x60, 0x30, 0x46, 0x00, 0x82, 0xe0, 0x9a, 0x83,
  0xc1, 0x18, 0x01, 0x08, 0x82, 0x6c, 0xfd, 0x0b, 0x63, 0x04, 0x6c, 0x3b,
  0xff, 0xa4, 0x37, 0x46, 0x00, 0x82, 0x20, 0x48, 0x82, 0xc1, 0x18, 0x01,
  0x08, 0x82, 0x20, 0xfc, 0x8d, 0x11, 0xb8, 0x7d, 0x2c, 0xda, 0xbe, 0x30,
  0x46, 0xd0, 0xc7, 0xa2, 0x8b, 0x7f, 0x63, 0x04, 0xb5, 0x5a, 0xab, 0xed,
  0x37, 0x46, 0x20, 0x8b, 0x6e, 0x4f, 0x83, 0xc1, 0x18, 0x01, 0x0f, 0xaf,
  0x3a, 0xdd, 0x8d, 0x11, 0x80, 0x20, 0x08, 0x82, 0x60, 0x30, 0x02, 0x30,
  0x46, 0x00, 0x82, 0x20, 0x88, 0x7f, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xd0, 0xd9, 0x82, 0x1e, 0xa4, 0x42,
  0x2c, 0xc4, 0x82, 0x28, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x41, 0x77,
  0x0b, 0x7b, 0xa0, 0x0a, 0xb6, 0x60, 0x0b, 0xa3, 0x30, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x1d, 0x2e, 0xf0, 0xc1, 0x2a, 0xd8, 0x82, 0x2d, 0x90,
  0xc2, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x74, 0xb9, 0xd0, 0x07, 0xae,
  0x80, 0x0b, 0xb8, 0x50, 0x0a, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xd0,
  0xe9, 0x82, 0x1f, 0xbc, 0x02, 0x2e, 0xe0, 0x82, 0x29, 0x8c, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x41, 0xb7, 0x0b, 0x7f, 0xd0, 0x0a, 0xb9, 0xa0, 0x0b,
  0xa7, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x39, 0xf0, 0xc1,
  0x2d, 0xe8, 0xc2, 0x2b, 0xdc, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18,
  0x18, 0xe6, 0xd0, 0x07, 0xb8, 0xb0, 0x0b, 0xa8, 0x80, 0x07, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x60, 0x9c, 0x83, 0x1f, 0xe4, 0x02, 0x2f, 0xc0,
  0x42, 0x1e, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x81, 0x0e, 0x7f,
  0xa0, 0x0b, 0xbd, 0x40, 0x0b, 0x7a, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0x46, 0x3a, 0x80, 0xc2, 0x2f, 0xf8, 0xc2, 0x2c, 0xec, 0xc1, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xea, 0x10, 0x0a, 0xe0, 0xf0, 0x0b,
  0xac, 0xc0, 0x07, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x80, 0x91, 0x83,
  0x1f, 0x1c, 0xe0, 0x30, 0x9a, 0x10, 0x04, 0xc3, 0x11, 0x41, 0x14, 0x7c,
  0xb3, 0x0c, 0x4d, 0x10, 0x0c, 0x47, 0x08, 0x51, 0xf0, 0xcd, 0x32, 0x08,
  0x43, 0x30, 0x62, 0xf0, 0x00, 0x20, 0x08, 0x06, 0x4d, 0x3b, 0x94, 0x82,
  0xc3, 0x18, 0x45, 0x14, 0x91, 0x03, 0x39, 0x84, 0x42, 0x34, 0x9a, 0x10,
  0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30,
  0x4b, 0xd0, 0x0c, 0x47, 0x20, 0x59, 0xf0, 0xcd, 0x32, 0x10, 0x45, 0x30,
  0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x51, 0x3c, 0xc4, 0x02, 0x33, 0x62,
  0x60, 0x00, 0x20, 0x08, 0x06, 0x91, 0x3c, 0xc8, 0x02, 0x33, 0x62, 0x60,
  0x00, 0x20, 0x08, 0x06, 0xd1, 0x3c, 0xa8, 0x83, 0x30, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0x11, 0x3d, 0xac, 0x83, 0x30, 0x62, 0x60, 0x00, 0x20,
  0x08, 0x06, 0x51, 0x3d, 0xd8, 0x02, 0x34, 0x62, 0x60, 0x00, 0x20, 0x08,
  0x06, 0x91, 0x3d, 0xdc, 0x02, 0x34, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06,
  0xd1, 0x3d, 0xb8, 0x83, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x11,
  0x3e, 0xbc, 0x83, 0x60, 0x82, 0x01, 0x1f, 0x13, 0x0c, 0xf8, 0x8c, 0x18,
  0x1c, 0x00, 0x08, 0x82, 0x01, 0x86, 0x0f, 0xb2, 0xb0, 0xd5, 0xc3, 0x68,
  0x42, 0x20, 0x8c, 0x26, 0x08, 0x83, 0x09, 0x85, 0x7c, 0x4c, 0x28, 0xe4,
  0x33, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x95, 0x3f, 0xf4, 0x82, 0x10,
  0x0b, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0xfd, 0x83, 0x2f, 0x08,
  0xb2, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x15, 0x48, 0x90, 0x83,
  0x90, 0x06, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0x85, 0x44, 0x39,
  0x08, 0x6a, 0x60, 0xc8, 0x27, 0x1f, 0x43, 0x3e, 0xf9, 0x18, 0x51, 0x07,
  0xf2, 0x31, 0xc2, 0x0e, 0xe4, 0x63, 0x84, 0x10, 0x1f, 0x23, 0x84, 0xf8,
  0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0xa4, 0x12, 0xed, 0x20, 0x8c,
  0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0xb4, 0x12, 0xee, 0x20, 0x98, 0xc2,
  0x0b, 0xf0, 0xb1, 0x60, 0x80, 0x8f, 0x2d, 0xbe, 0x00, 0x1f, 0x0b, 0x08,
  0xf8, 0xd8, 0xe0, 0xd0, 0xc7, 0x04, 0x87, 0x3e, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0x10, 0xc9, 0x84, 0x4a, 0x08, 0x23, 0x06, 0x06, 0x00, 0x82,
  0x60, 0x10, 0xcd, 0xc4, 0x4a, 0x08, 0x26, 0xf4, 0x81, 0x7c, 0x4c, 0xf0,
  0x03, 0xf9, 0x98, 0x29, 0x08, 0xf1, 0xb1, 0x53, 0x10, 0xe2, 0x63, 0x86,
  0x21, 0x1f, 0x0b, 0x06, 0xf9, 0xd8, 0x71, 0xc8, 0xc7, 0x02, 0x42, 0x3e,
  0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x10, 0xf1, 0x04, 0x48, 0x50, 0x23,
  0x06, 0x06, 0x00, 0x82, 0x60, 0x10, 0xf5, 0x44, 0x48, 0x50, 0x26, 0xb4,
  0x02, 0x7c, 0x4c, 0x70, 0x05, 0xf8, 0x98, 0x70, 0xc0, 0xc7, 0x04, 0x03,
  0x3e, 0xa3, 0x09, 0x67, 0x00, 0x8c, 0x26, 0xa0, 0x41, 0x60, 0x02, 0x21,
  0x1f, 0x23, 0x04, 0xf9, 0x8c, 0x18, 0x54, 0x00, 0x08, 0x82, 0xc1, 0x73,
  0x16, 0x2b, 0x91, 0x0a, 0xa7, 0x20, 0x04, 0xac, 0xc0, 0x0a, 0x3f, 0xf1,
  0x13, 0xfc, 0x50, 0x07, 0x74, 0xc0, 0x0a, 0x71, 0x00, 0x07, 0xac, 0xc0,
  0x0a, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30,
  0x9a, 0x40, 0x0c, 0xb3, 0x04, 0xcd, 0x70, 0xc4, 0x28, 0xec, 0x42, 0xf0,
  0xcd, 0x32, 0x18, 0x47, 0x30, 0x62, 0xf0, 0x00, 0x20, 0x08, 0x06, 0x8d,
  0x5b, 0x98, 0xc4, 0x2b, 0xb4, 0xc2, 0x29, 0x98, 0x82, 0x2c, 0xc8, 0x42,
  0x59, 0x94, 0x85, 0x48, 0xc8, 0xc2, 0x68, 0x42, 0x00, 0x58, 0x40, 0x0f,
  0xf2, 0xb1, 0x80, 0x1e, 0xe0, 0x33, 0x62, 0xf0, 0x00, 0x20, 0x08, 0x06,
  0x8d, 0x5c, 0xa8, 0x04, 0x2d, 0xc8, 0x42, 0xf0, 0x0b, 0xb6, 0x60, 0x0b,
  0x69, 0x91, 0x16, 0x26, 0x61, 0x0b, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20,
  0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0xb3, 0x04, 0xcd, 0x70,
  0x44, 0x2b, 0xe4, 0x43, 0xf0, 0xcd, 0x32, 0x20, 0x49, 0x30, 0x62, 0xf0,
  0x00, 0x20, 0x08, 0x06, 0x0d, 0x5e, 0xc0, 0x44, 0x2e, 0xdc, 0x42, 0x2c,
  0xc0, 0x02, 0x2f, 0xf0, 0xc2, 0x5b, 0xbc, 0x05, 0x4b, 0xf0, 0xc2, 0x68,
  0x42, 0x00, 0x8c, 0x18, 0x3c, 0x00, 0x08, 0x82, 0x41, 0xa3, 0x17, 0x32,
  0xc1, 0x0b, 0xb9, 0x30, 0x0b, 0xb2, 0xe0, 0x0b, 0xbe, 0x10, 0x17, 0x71,
  0xe1, 0x12, 0xbe, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x62,
  0x70, 0x00, 0x20, 0x08, 0x06, 0x18, 0x5e, 0xc8, 0xc4, 0x2e, 0xb8, 0xc5,
  0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0xd8, 0x80,
  0xc0, 0xc7, 0x86, 0x03, 0x3e, 0x36, 0x1c, 0xf0, 0x19, 0x31, 0x38, 0x00,
  0x10, 0x04, 0x03, 0xec, 0x2f, 0x72, 0x42, 0x1c, 0x7a, 0x62, 0x34, 0x21,
  0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x0c, 0x16, 0x00,
  0x04, 0xc1, 0x60, 0x2a, 0x0d, 0xb1, 0x38, 0x8c, 0x62, 0x10, 0x82, 0x11,
  0x83, 0x03, 0x00, 0x41, 0x30, 0xc0, 0x48, 0xc3, 0x27, 0xce, 0xa1, 0x2c,
  0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0xc4,
  0x60, 0x01, 0x40, 0x10, 0x0c, 0x26, 0xd5, 0x38, 0x0b, 0x66, 0x51, 0x06,
  0x21, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x2c, 0x35, 0xc6, 0x82,
  0x1d, 0x46, 0x63, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61,
  0x10, 0x46, 0x0c, 0x16, 0x00, 0x04, 0xc1, 0x60, 0x7a, 0x0d, 0xb6, 0x88,
  0xa0, 0x67, 0x10, 0x82, 0x59, 0x82, 0x66, 0x38, 0x22, 0x1d, 0x68, 0x22,
  0xf8, 0x66, 0x19, 0x94, 0x25, 0x18, 0x31, 0x78, 0x00, 0x10, 0x04, 0x83,
  0x86, 0x36, 0xd8, 0xa2, 0x1e, 0xe6, 0xa1, 0x1d, 0xd8, 0x01, 0x1f, 0xf0,
  0x61, 0x35, 0x56, 0x03, 0x2d, 0xf0, 0x61, 0x34, 0x21, 0x00, 0x46, 0x0c,
  0x1e, 0x00, 0x04, 0xc1, 0xa0, 0xb1, 0x0d, 0xb7, 0xc0, 0x87, 0x7a, 0x78,
  0x07, 0x77, 0xd0, 0x07, 0x7d, 0x68, 0x8d, 0xd6, 0x50, 0x0b, 0x7d, 0x18,
  0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04,
  0x03, 0x8c, 0x36, 0xdc, 0xe2, 0x1e, 0x54, 0x63, 0x34, 0x21, 0x00, 0x46,
  0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x6c, 0x40, 0xe0, 0x63, 0x83, 0x01,
  0x1f, 0x1b, 0x10, 0xf8, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x01, 0xb6,
  0x1b, 0x75, 0xe1, 0x0f, 0x79, 0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42,
  0x30, 0x9a, 0x30, 0x08, 0x23, 0x06, 0x0b, 0x00, 0x82, 0x60, 0x30, 0x85,
  0x87, 0x5f, 0x1c, 0x46, 0x31, 0x08, 0xc1, 0x88, 0xc1, 0x01, 0x80, 0x20,
  0x18, 0x60, 0xe0, 0xa1, 0x17, 0x23, 0x11, 0x1a, 0xa3, 0x09, 0x01, 0x30,
  0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x62, 0xb0, 0x00, 0x20, 0x08,
  0x06, 0x93, 0x79, 0x8c, 0x06, 0xb3, 0x28, 0x83, 0x10, 0x8c, 0x18, 0x1c,
  0x00, 0x08, 0x82, 0x01, 0x56, 0x1e, 0x7f, 0x81, 0x12, 0xbf, 0x31, 0x9a,
  0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x23, 0x06, 0x0b,
  0x00, 0x82, 0x60, 0x30, 0xad, 0x07, 0x6a, 0x44, 0xd0, 0x33, 0x08, 0xc1,
  0x2c, 0x41, 0x33, 0x1c, 0x51, 0x12, 0x6f, 0x11, 0x7c, 0xb3, 0x0c, 0x4c,
  0x13, 0x8c, 0x18, 0x3c, 0x00, 0x08, 0x82, 0x41, 0x03, 0x1f, 0xa8, 0x11,
  0x13, 0x2f, 0x91, 0x12, 0x28, 0x41, 0x13, 0x34, 0x71, 0x1e, 0xe7, 0x41,
  0x1a, 0x34, 0x31, 0x9a, 0x10, 0x00, 0x23, 0x06, 0x0f, 0x00, 0x82, 0x60,
  0xd0, 0xc8, 0x87, 0x6a, 0xd0, 0x44, 0x4c, 0xac, 0x84, 0x4a, 0xd8, 0x84,
  0x4d, 0xa4, 0x47, 0x7a, 0x98, 0x86, 0x4d, 0x8c, 0x26, 0x04, 0xc0, 0x88,
  0xc1, 0x03, 0x80, 0x20, 0x18, 0x34, 0xf4, 0xc1, 0x1a, 0x37, 0x31, 0x13,
  0x2d, 0xc1, 0x12, 0x38, 0x81, 0x13, 0xeb, 0xb1, 0x1e, 0xa8, 0x81, 0x13,
  0xa3, 0x09, 0x01, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x58, 0x7c,
  0xac, 0x06, 0x4d, 0x9c, 0xc7, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1,
  0x68, 0xc2, 0x20, 0xd8, 0x90, 0xc0, 0xc7, 0x06, 0x04, 0x3e, 0x36, 0x1c,
  0xf0, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x0c, 0x3f, 0x64, 0x63,
  0x27, 0x6c, 0x63, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61,
  0x10, 0x46, 0x0c, 0x16, 0x00, 0x04, 0xc1, 0x60, 0xf2, 0x8f, 0xdd, 0x38,
  0x8c, 0x62, 0x10, 0x82, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xc0, 0xfa,
  0xe3, 0x36, 0xc0, 0xc2, 0x37, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08,
  0x46, 0x13, 0x06, 0x61, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0xa6, 0x11,
  0x01, 0x0f, 0x66, 0x51, 0x06, 0x21, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04,
  0x03, 0x4c, 0x44, 0x78, 0xa3, 0x2c, 0xf8, 0x63, 0x34, 0x21, 0x00, 0x46,
  0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x0c, 0x16, 0x00, 0x04, 0xc1,
  0x60, 0x42, 0x91, 0xf2, 0x88, 0xa0, 0x67, 0x10, 0x82, 0x59, 0x82, 0x66,
  0xa0, 0x68, 0xe0, 0x13, 0xc1, 0x34, 0x08, 0xb9, 0x30, 0x50, 0x02, 0x81,
  0x05, 0xc5, 0x62, 0xc4, 0x05, 0x10, 0x97, 0x65, 0xa0, 0x68, 0xe0, 0x13,
  0xc1, 0x34, 0x08, 0xb9, 0x30, 0x40, 0x02, 0x41, 0x05, 0xc5, 0x61, 0xc8,
  0x05, 0x30, 0x97, 0x65, 0xa0, 0x68, 0xe0, 0x13, 0xc1, 0x34, 0x08, 0xb9,
  0x30, 0xf0, 0x01, 0x01, 0x05, 0xc5, 0x60, 0xcc, 0x05, 0x40, 0x97, 0x65,
  0xa0, 0x68, 0xe0, 0x13, 0xc1, 0x34, 0x08, 0xb9, 0x30, 0xd0, 0x05, 0x41,
  0x17, 0x05, 0x5d, 0x18, 0x74, 0x01, 0xd0, 0x65, 0x19, 0x4d, 0x38, 0x0b,
  0x61, 0x38, 0x22, 0xf8, 0x8b, 0xe0, 0x9b, 0x65, 0x70, 0x9e, 0x60, 0xc4,
  0xc0, 0x00, 0x40, 0x10, 0x0c, 0x22, 0x18, 0x39, 0x11, 0x63, 0xc4, 0xc0,
  0x00, 0x40, 0x10, 0x0c, 0xa2, 0x18, 0x41, 0x11, 0x63, 0xc4, 0xc0, 0x00,
  0x40, 0x10, 0x0c, 0x22, 0x19, 0x49, 0x11, 0x63, 0xc4, 0xc0, 0x00, 0x40,
  0x10, 0x0c, 0xa2, 0x19, 0x59, 0x8f, 0x61, 0xc4, 0xc0, 0x00, 0x40, 0x10,
  0x0c, 0x22, 0x1a, 0x61, 0x8f, 0x61, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c,
  0xa2, 0x1a, 0x69, 0x8f, 0xc1, 0x86, 0xd3, 0x90, 0x8f, 0x0d, 0xa8, 0x21,
  0x1f, 0x1b, 0x52, 0x43, 0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x10,
  0xe5, 0x88, 0x7c, 0x0c, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x10, 0xe9,
  0xc8, 0x7c, 0x0c, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x10, 0xed, 0x08,
  0x7d, 0x0c, 0x36, 0xb8, 0x06, 0x7c, 0x6c, 0x78, 0x0d, 0xf8, 0xd8, 0x00,
  0x1b, 0xf0, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0xaa, 0x47, 0xf8,
  0x63, 0x38, 0x8d, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xa8, 0x7c, 0xa4,
  0x3f, 0x06, 0xd4, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0xea, 0x47,
  0xfc, 0x63, 0x48, 0x0d, 0x4b, 0x6a, 0x43, 0x3e, 0x96, 0xd8, 0x86, 0x7c,
  0x2c, 0xb9, 0x0d, 0xf9, 0x58, 0x6e, 0x0c, 0xf1, 0x31, 0xdd, 0x18, 0xe2,
  0x63, 0xbb, 0x31, 0xc4, 0xc7, 0x92, 0x81, 0x3e, 0x96, 0x0c, 0xf4, 0xb1,
  0x64, 0xa0, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x44, 0x6b, 0x22,
  0x26, 0xc3, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x44, 0x6c, 0x32, 0x26,
  0xc3, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x44, 0x6d, 0x42, 0x26, 0xc3,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x44, 0x6e, 0x62, 0x22, 0xc3, 0x88,
  0x81, 0x01, 0x80, 0x20, 0x18, 0x44, 0x6f, 0x72, 0x22, 0xc3, 0x88, 0x81,
  0x01, 0x80, 0x20, 0x18, 0x44, 0x70, 0x82, 0x22, 0x83, 0x0d, 0xe6, 0x21,
  0x1f, 0x1b, 0xce, 0x43, 0x3e, 0x36, 0xa0, 0x87, 0x7c, 0x46, 0x0c, 0x0c,
  0x00, 0x04, 0xc1, 0x20, 0xa2, 0x93, 0x16, 0x19, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0x20, 0xaa, 0x13, 0x17, 0x19, 0x46, 0x0c, 0x0c, 0x00, 0x04,
  0xc1, 0x20, 0xb2, 0x93, 0x17, 0x19, 0x6c, 0x68, 0x0f, 0xf9, 0xd8, 0xe0,
  0x1e, 0xf2, 0xb1, 0xe1, 0x3d, 0xe4, 0x33, 0x62, 0x70, 0x00, 0x20, 0x08,
  0x06, 0xd8, 0x9d, 0xc4, 0x88, 0x6e, 0xc0, 0xc9, 0x68, 0x42, 0x30, 0x58,
  0x11, 0xd0, 0xc7, 0x0a, 0x81, 0x3e, 0x56, 0x0c, 0xf4, 0x99, 0x25, 0x78,
  0x06, 0x2a, 0x06, 0xc3, 0x51, 0x87, 0x66, 0xa0, 0x62, 0x30, 0x1c, 0x75,
  0x68, 0x06, 0x2a, 0x06, 0xc3, 0x51, 0x87, 0x66, 0xc4, 0xe0, 0x00, 0x40,
  0x10, 0x0c, 0xb0, 0x3f, 0xc9, 0x11, 0xf1, 0xc0, 0x93, 0xd1, 0x84, 0x00,
  0x18, 0x8e, 0x08, 0xd8, 0xc3, 0xf9, 0x66, 0x19, 0xa0, 0x2c, 0x18, 0x8e,
  0x10, 0xd8, 0x23, 0xf8, 0x66, 0x19, 0x22, 0x29, 0x18, 0x4d, 0x20, 0x02,
  0x0b, 0x10, 0xf9, 0x98, 0x80, 0xc8, 0xc7, 0x06, 0x44, 0x3e, 0xb3, 0x04,
  0xd9, 0x70, 0xc4, 0x31, 0x1f, 0xc1, 0x37, 0xcb, 0x30, 0x65, 0xc1, 0x70,
  0x44, 0x1f, 0xd0, 0x47, 0xf0, 0xcd, 0x32, 0x50, 0x55, 0x60, 0x4d, 0x8b,
  0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xb4, 0x54, 0x11, 0x93,
  0x16, 0x69, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xd0, 0x54, 0x65,
  0x4c, 0x5a, 0xa4, 0x09, 0x0c, 0x6a, 0x11, 0xf9, 0x8c, 0x18, 0x20, 0x00,
  0x08, 0x82, 0x81, 0xc6, 0x2a, 0x65, 0xd2, 0x22, 0x50, 0x30, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x5a, 0xab, 0x98, 0x49, 0x8b, 0x40, 0x81, 0x4d,
  0x2d, 0x22, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xd0, 0x5e, 0x05,
  0x4d, 0x5a, 0x64, 0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x83,
  0x95, 0x34, 0x69, 0x91, 0x29, 0x98, 0x25, 0xa8, 0x06, 0x2a, 0x06, 0x87,
  0x62, 0x83, 0x69, 0xa0, 0x62, 0x50, 0x28, 0x36, 0x98, 0x06, 0x2a, 0x06,
  0x83, 0x62, 0x83, 0x69, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x2a, 0x5b,
  0xa9, 0x13, 0x21, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0xea, 0x56,
  0xec, 0x84, 0x08, 0x86, 0x23, 0x02, 0x11, 0x11, 0xbe, 0x59, 0x06, 0xeb,
  0x0a, 0x46, 0x13, 0xb2, 0xc0, 0x82, 0x41, 0x3e, 0x16, 0x90, 0x08, 0x7c,
  0x46, 0x13, 0x38, 0xc1, 0x02, 0x43, 0x3e, 0x16, 0x9c, 0x08, 0x7c, 0x8c,
  0x08, 0xe8, 0x63, 0x41, 0x23, 0x1f, 0x13, 0x1a, 0xf9, 0xd8, 0xd0, 0xc8,
  0x67, 0x96, 0xe0, 0x1a, 0xa8, 0x18, 0x0c, 0x0b, 0x0c, 0xaa, 0x81, 0x8a,
  0xc1, 0xb0, 0xc0, 0xa0, 0x1a, 0xa8, 0x18, 0x0c, 0x0b, 0x0c, 0xaa, 0x59,
  0x06, 0x2c, 0xeb, 0x6c, 0xb8, 0x13, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x81, 0x56, 0x2e, 0x7e, 0x72, 0x27, 0x43, 0x30, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x9a, 0xb9, 0xfc, 0xc9, 0x9d, 0x0c, 0x81, 0x19, 0x77,
  0x22, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xd0, 0xd0, 0x25, 0x54,
  0xee, 0xc4, 0x08, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x4b, 0x17,
  0x51, 0xb9, 0x13, 0x23, 0xb0, 0xe4, 0x4e, 0xe4, 0x33, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0xda, 0xba, 0x90, 0xca, 0x9d, 0x24, 0xc1, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x68, 0xec, 0x52, 0x2a, 0x77, 0x92, 0x04, 0xb3,
  0x04, 0xd9, 0x40, 0xcb, 0x40, 0x0e, 0x0f, 0x2d, 0x44, 0x0e, 0x86, 0x5d,
  0xe4, 0x20, 0x0d, 0xb4, 0x0c, 0xe4, 0xf0, 0xd0, 0x42, 0xa4, 0x60, 0xd8,
  0x45, 0x0e, 0xd2, 0x40, 0xcb, 0x40, 0x0e, 0x0f, 0x2d, 0x44, 0x06, 0x86,
  0x5d, 0xe4, 0x20, 0x0d, 0x47, 0x98, 0xc3, 0x8e, 0x04, 0xdf, 0x2c, 0x83,
  0x56, 0x06, 0xc1, 0x68, 0x82, 0x8b, 0x00, 0xc3, 0x11, 0x81, 0x8f, 0x38,
  0xdf, 0x2c, 0xc3, 0x46, 0x06, 0xc1, 0x70, 0x84, 0xe1, 0x26, 0xca, 0x37,
  0xcb, 0xd0, 0x71, 0x81, 0x1d, 0x70, 0x22, 0x9f, 0x59, 0x02, 0xcf, 0x90,
  0x56, 0x81, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x44, 0xfa, 0x12,
  0x2f, 0x81, 0x05, 0xae, 0x22, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30,
  0x88, 0xf8, 0x85, 0x56, 0x02, 0x0b, 0x5e, 0x45, 0x3e, 0x23, 0x06, 0x06,
  0x00, 0x82, 0x60, 0x10, 0xf9, 0xcb, 0xad, 0x04, 0xb3, 0x04, 0xde, 0x40,
  0xc5, 0xe0, 0x70, 0x42, 0x37, 0x1c, 0xe1, 0xdc, 0x89, 0xf2, 0xcd, 0x32,
  0x80, 0xc1, 0x17, 0xd8, 0x93, 0x27, 0xf2, 0x99, 0x25, 0x08, 0x03, 0x83,
  0x6c, 0x05, 0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x10, 0x8d, 0x8c,
  0xbe, 0x04, 0x16, 0xdc, 0x8a, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1,
  0x20, 0x2a, 0x99, 0x5e, 0x09, 0x2c, 0xc0, 0x15, 0xf9, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0x41, 0x74, 0x32, 0xe0, 0x12, 0xcc, 0x12, 0x84, 0xc1,
  0x40, 0xc5, 0xe0, 0x7c, 0x02, 0x18, 0x0c, 0x47, 0x58, 0xa0, 0xa2, 0x7c,
  0xb3, 0x0c, 0x63, 0x20, 0x06, 0x81, 0x5d, 0xa2, 0x22, 0x9f, 0x59, 0x02,
  0x32, 0x30, 0xec, 0x57, 0xe0, 0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06,
  0x11, 0xcb, 0x8c, 0x4c, 0x60, 0x01, 0xb8, 0xc8, 0x67, 0xc4, 0xc0, 0x00,
  0x40, 0x10, 0x0c, 0x22, 0x97, 0x31, 0x97, 0xc0, 0x82, 0x70, 0x91, 0xcf,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x44, 0x30, 0x93, 0x2e, 0xc1, 0x2c,
  0x01, 0x19, 0x0c, 0x74, 0x0c, 0xa0, 0xa0, 0x91, 0xc1, 0x18, 0x90, 0x81,
  0x18, 0x0c, 0x74, 0x0c, 0xa0, 0xa0, 0x51, 0x63, 0x40, 0x89, 0xc1, 0x40,
  0xc7, 0x00, 0x0a, 0x9a, 0x31, 0x06, 0x92, 0x18, 0x8c, 0x26, 0xb4, 0xc9,
  0x60, 0x01, 0x21, 0x1f, 0x13, 0x08, 0xf9, 0xd8, 0x40, 0xc8, 0x67, 0x96,
  0xc0, 0x0f, 0x86, 0x23, 0x54, 0x22, 0x54, 0x82, 0x6f, 0x34, 0x41, 0x4e,
  0x86, 0x59, 0x06, 0x33, 0x88, 0x03, 0xc1, 0x82, 0x34, 0x90, 0x8f, 0x09,
  0x69, 0x20, 0x1f, 0x1b, 0xd2, 0x40, 0x3e, 0xa3, 0x09, 0x76, 0x02, 0x0c,
  0x47, 0x04, 0xa6, 0xe2, 0x7c, 0xb3, 0x0c, 0x7e, 0x70, 0x06, 0xc1, 0x70,
  0x44, 0x91, 0x2a, 0xca, 0x37, 0xcb, 0x90, 0x06, 0x68, 0x10, 0x98, 0xb1,
  0x2a, 0xf2, 0x99, 0x25, 0x50, 0x83, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30,
  0x88, 0xc2, 0x06, 0x67, 0x8e, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x88,
  0xc4, 0x46, 0x5f, 0x02, 0x0b, 0x5e, 0x45, 0x3e, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0x10, 0x91, 0x4d, 0xbf, 0x04, 0x16, 0xc8, 0x8a, 0x7c, 0x2c,
  0xa0, 0x15, 0xf8, 0xcc, 0x12, 0xa8, 0xc1, 0x40, 0xc5, 0xe0, 0xa0, 0x81,
  0x90, 0x06, 0xc3, 0x11, 0x8d, 0xac, 0x28, 0xdf, 0x2c, 0x03, 0x1b, 0xac,
  0x41, 0x60, 0x0e, 0xad, 0xc8, 0x67, 0x96, 0xa0, 0x0d, 0x46, 0x0c, 0x0c,
  0x00, 0x04, 0xc1, 0x20, 0x52, 0x9b, 0xb0, 0x79, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0x20, 0x5a, 0x9b, 0x91, 0x09, 0x2c, 0xc0, 0x15, 0xf9, 0x8c,
  0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0xd4, 0x36, 0x26, 0x13, 0x58, 0xb0,
  0x2b, 0xf2, 0xb1, 0xa0, 0x57, 0xe0, 0x33, 0x4b, 0xd0, 0x06, 0x03, 0x15,
  0x83, 0xb3, 0x06, 0x02, 0x1b, 0x0c, 0x47, 0x54, 0xbb, 0xa2, 0x7c, 0xb3,
  0x0c, 0x6f, 0xe0, 0x06, 0x81, 0x59, 0xbd, 0x22, 0x9f, 0x59, 0x02, 0x38,
  0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x68, 0x6e, 0xd4, 0xe6, 0x1a,
  0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x88, 0x6e, 0x58, 0x26, 0xb0, 0x20,
  0x5c, 0xe4, 0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x91, 0xdd, 0xbc,
  0x4c, 0x60, 0x01, 0xb9, 0xc8, 0xc7, 0x02, 0x73, 0x81, 0xcf, 0x2c, 0x01,
  0x1c, 0x0c, 0x54, 0x0c, 0x8e, 0x1b, 0x08, 0x6f, 0x30, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0x91, 0xde, 0xc8, 0xcd, 0x34, 0x62, 0x60, 0x00, 0x20,
  0x08, 0x06, 0xd1, 0xde, 0xcc, 0xcd, 0x32, 0x62, 0x60, 0x00, 0x20, 0x08,
  0x06, 0x11, 0xdf, 0xd0, 0xcd, 0x30, 0x4b, 0xe0, 0x07, 0xb3, 0x0c, 0x72,
  0xd0, 0x07, 0x6e, 0x61, 0xac, 0xc0, 0x32, 0xf2, 0x19, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x03, 0x4d, 0x6f, 0x66, 0x86, 0x65, 0x58, 0x21, 0x18, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x03, 0x6d, 0x6f, 0x68, 0x86, 0x65, 0x58, 0x21,
  0xb0, 0x57, 0x60, 0x19, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81,
  0xd6, 0x37, 0x36, 0xc3, 0x32, 0xaf, 0x10, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x81, 0xe6, 0x37, 0x37, 0xc3, 0x32, 0xaf, 0x10, 0x98, 0x2c, 0xb0,
  0x8c, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x03, 0x9d, 0x9c,
  0x61, 0x19, 0x59, 0x08, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x0b,
  0x1d, 0x9d, 0x61, 0x19, 0x59, 0x08, 0xac, 0x0d, 0x0e, 0xf9, 0x98, 0x1b,
  0x14, 0xf2, 0xb1, 0x37, 0x18, 0xe4, 0x33, 0x9a, 0x20, 0x2e, 0xc0, 0x70,
  0x44, 0x20, 0x2f, 0xce, 0x37, 0xcb, 0xe0, 0x07, 0x73, 0x10, 0x0c, 0x47,
  0x14, 0xf5, 0xa2, 0x7c, 0xb3, 0x0c, 0x75, 0x40, 0x07, 0x81, 0x19, 0xf7,
  0x22, 0x9f, 0x59, 0x02, 0x3b, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83,
  0xa8, 0x75, 0x48, 0xe7, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0xc8,
  0x75, 0xcc, 0x26, 0xb0, 0x60, 0x5f, 0xe4, 0x33, 0x62, 0x60, 0x00, 0x20,
  0x08, 0x06, 0x11, 0xec, 0xa4, 0x4d, 0x60, 0x81, 0xbf, 0xc8, 0xc7, 0x02,
  0x90, 0x81, 0xcf, 0x2c, 0x81, 0x1d, 0x0c, 0x54, 0x0c, 0x0e, 0x1d, 0x08,
  0x75, 0x30, 0x1c, 0xd1, 0xf8, 0x8b, 0xf2, 0xcd, 0x32, 0xe0, 0xc1, 0x1d,
  0x04, 0xe6, 0x80, 0x8c, 0x7c, 0x66, 0x09, 0xf2, 0x60, 0xc4, 0xc0, 0x00,
  0x40, 0x10, 0x0c, 0x22, 0xdb, 0x69, 0x9d, 0x67, 0xc4, 0xc0, 0x00, 0x40,
  0x10, 0x0c, 0xa2, 0xdb, 0x79, 0x9b, 0xc0, 0x02, 0x92, 0x91, 0xcf, 0x88,
  0x81, 0x01, 0x80, 0x20, 0x18, 0x44, 0xb9, 0x23, 0x37, 0x81, 0x05, 0x27,
  0x23, 0x1f, 0x0b, 0x52, 0x06, 0x3e, 0xb3, 0x04, 0x79, 0x30, 0x50, 0x31,
  0x38, 0x77, 0x20, 0xe0, 0xc1, 0x70, 0x44, 0x75, 0x32, 0xca, 0x37, 0xcb,
  0xb0, 0x07, 0x7a, 0x10, 0x98, 0x95, 0x32, 0xf2, 0x99, 0x25, 0xe0, 0x83,
  0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x88, 0x7e, 0xc7, 0x76, 0xae, 0x11,
  0x03, 0x03, 0x00, 0x41, 0x30, 0x88, 0xc0, 0x07, 0x6f, 0x02, 0x0b, 0x5a,
  0x46, 0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x10, 0x89, 0xcf, 0xde,
  0x04, 0x16, 0xc0, 0x8c, 0x7c, 0x2c, 0x90, 0x19, 0xf8, 0xcc, 0x12, 0xf0,
  0xc1, 0x40, 0xc5, 0xe0, 0xe8, 0x81, 0xb0, 0x07, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0x10, 0x99, 0x8f, 0xef, 0x4c, 0x23, 0x06, 0x06, 0x00, 0x82,
  0x60, 0x10, 0x9d, 0xcf, 0xef, 0x2c, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60,
  0x10, 0xa1, 0x0f, 0xf8, 0x0c, 0xb3, 0x04, 0x7e, 0x60, 0xb0, 0x80, 0x0f,
  0xf2, 0xb1, 0x58, 0xc0, 0x07, 0xf9, 0x98, 0x2c, 0xe0, 0x83, 0x7c, 0x66,
  0x09, 0xfc, 0x60, 0xa0, 0x66, 0x70, 0x0b, 0x32, 0x30, 0xfa, 0x80, 0x2c,
  0xcc, 0x80, 0x1c, 0xe0, 0x80, 0x15, 0xe4, 0x80, 0xe1, 0x83, 0x81, 0x9a,
  0xc1, 0x2d, 0xc8, 0xc0, 0xe8, 0x03, 0xb2, 0x30, 0x03, 0x72, 0x80, 0x03,
  0x56, 0x90, 0x03, 0x86, 0x0f, 0x06, 0x6a, 0x06, 0xb7, 0x20, 0x03, 0xa3,
  0x0f, 0xc8, 0xc2, 0x0c, 0xc8, 0x01, 0x0e, 0x58, 0x41, 0x0e, 0x18, 0x3e,
  0xb0, 0xc1, 0x65, 0xe4, 0x63, 0x83, 0xcb, 0xc8, 0xc7, 0x06, 0x97, 0x91,
  0x8f, 0x95, 0x87, 0xcb, 0xc8, 0x67, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c,
  0x10, 0xfb, 0x89, 0x1d, 0xf6, 0x61, 0x9f, 0xf0, 0x21, 0x46, 0x0c, 0x12,
  0x00, 0x04, 0xc1, 0x00, 0xb1, 0x9f, 0xd8, 0x61, 0x1f, 0xf6, 0xc9, 0x9d,
  0x61, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x10, 0xfb, 0x89, 0x1d, 0xf6,
  0x61, 0x1f, 0xf0, 0x11, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0xb1,
  0x9f, 0xd8, 0x61, 0x1f, 0xf6, 0x19, 0x9f, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
